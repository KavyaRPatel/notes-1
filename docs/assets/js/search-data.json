[{"doc":"This page has not yet sprouted","title":"This page has not yet sprouted","hpath":"403","content":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","url":"https://sameep1234.github.io/notes/notes/403.html","relUrl":"notes/403.html"},{"doc":"Curated Notes","title":"Curated Notes","hpath":"root","content":"\nYou have reached the home page of my curated notes. I am a third year student pursuing Computer Science and Engineering at Ahmedabad University.\n\nFeel free to use this resource to its best potential and reach out to me on [Linkedin](https://www.linkedin.com/in/sameep-vani/) and do checkout my [GitHub](https://github.com/Sameep1234)","url":"https://sameep1234.github.io/notes","relUrl":"/"},{"doc":"Courses","title":"Courses","hpath":"courses","content":"\n","url":"https://sameep1234.github.io/notes/notes/Jq5ki9jf1QLTdc3DYLRW4.html","relUrl":"notes/Jq5ki9jf1QLTdc3DYLRW4.html"},{"doc":"Semester 5","title":"Semester 5","hpath":"courses.Semester 5","content":"\n","url":"https://sameep1234.github.io/notes/notes/O93aKwUCEnkxTR7S8V2eZ.html","relUrl":"notes/O93aKwUCEnkxTR7S8V2eZ.html"},{"doc":"Sensors","title":"Sensors","hpath":"courses.Semester 5.Sensors","content":"\n","url":"https://sameep1234.github.io/notes/notes/BU8smu6Xa4e3tkB0iVHT9.html","relUrl":"notes/BU8smu6Xa4e3tkB0iVHT9.html"},{"doc":"Lecture 6","title":"Lecture 6","hpath":"courses.Semester 5.Sensors.Lecture 6","content":"\n# **Some Parts missed**\n\n## Feedback control\n* Here we are considering the example of an engine of the car.\n* ![](/assets/images/2021-09-03-09-49-46.png)\n* Motor is used for getting a particular position and not a particular speed.\n* Particular position will ensure that the desired speed is achieved.\n\n## Pulse Width modulation\n* Width of the pulse determines the average voltage. Higher the width of the pulse, higher the voltage and vice versa.\n\n## Important relationships\n* ![](/assets/images/2021-09-03-09-55-04.png)\n\n# **Left**","url":"https://sameep1234.github.io/notes/notes/7wBsWBHoR3vbDDtihibEN.html","relUrl":"notes/7wBsWBHoR3vbDDtihibEN.html"},{"doc":"Lecture 5","title":"Lecture 5","hpath":"courses.Semester 5.Sensors.Lecture 5","content":"\n# Control Systems\n\n## Introduction\n* System which controls a physical quantity.\n* Components of control system\n    * Control element (Eg. Timer)\n    * Plant (Eg. Heating coil)\n* Type of control system\n    * Open Loop: Control action is independent of the control variable.\n        * We must assume the timer setting to be correct.\n        * Block Diagram\n        ![](/assets/images/2021-09-02-13-09-13.png)\n    * Closed Loop: User will have manual control.\n        * Feedback recieved with the help of human senses. Can also be used as feedback in automatic control systems. For this, the feedback has to be electrical.\n        * This means that the control action depends on the output variable.\n    * There are various other factors which can't be known and hence are assumed to be constant. For example, ageing and changes in load weight. \n\n    ## Steady state calculation\n    ![](/assets/images/2021-09-02-13-20-17.png)\n    * A is the gain of the amplifier. It is dimensionless. Also called as the loop gain.\n    * Km is the motor constant. Upto Km, we will get the **speed** of the motor.\n    * Ks is the sensor constant. Speed sensors input is speed and output is voltage. Dimension of Ks is opposite to that of Km. Ks = $\\frac{Vf}{N}$.\n    * N = rpm\n\n    ## Specification of control systems\n    * Accuracy of output in steady state.\n    * Speed of response.\n    * Feedback (Improves both).\n\n    ## Steps in analysis of control system\n    ![](/assets/images/2021-09-02-13-49-06.png)\n\n    # **Some Part Left**","url":"https://sameep1234.github.io/notes/notes/8zzCqwP3wrOrk1Q9JsHx0.html","relUrl":"notes/8zzCqwP3wrOrk1Q9JsHx0.html"},{"doc":"Lecture 4","title":"Lecture 4","hpath":"courses.Semester 5.Sensors.Lecture 4","content":"\n# TinkerCAD\n> This lecture included the demo of TinkerCAD and hence there are not much notes of it.\n\n## Extra Points\n* [Arduino Code Reference](https://www.arduino.cc/reference/en/)\n* Digital Read Function\n    * Pin from which digital input is read.\n    * Syntax: x = digitalRead(Inpin);\n* Analog Read\n    * Syntax: x = analogread(potPin);\n    * x ranges between 0 to 1023.\n* Serial Communication\n    * Syntax = Serial.begin(9600)\n    * This has to be used in setup part of the program structure.\n    * Will establish serial communication between computer monitor and Arduino.\n    * Syntax: Serial.println(\"ADC Output\");\n    * This will print it as a string on the monitor.\n* Digital to Analog Conversion calculation\n    * ![](/assets/images/2021-09-01-23-10-27.png)","url":"https://sameep1234.github.io/notes/notes/WpnHrHHbJSgSeXE8haX51.html","relUrl":"notes/WpnHrHHbJSgSeXE8haX51.html"},{"doc":"Lecture 3","title":"Lecture 3","hpath":"courses.Semester 5.Sensors.Lecture 3","content":"\n# Best Fit, Measurement and Control Systems\n\n## Points\n* With one value of x, take many values of y and then take the average\n* Error can occur at input as well as output side\n## Standard Error and Standard Deviation\n> Measures how much discrepancy (difference) is likely to be in the sample mean and the population mean.\n\n* Std Dev = Spread of data around the mean\n\n![](/assets/images/2021-08-27-09-42-54.png)\n* In excel, multiply by sqrt(nx) and divide by sqrt(nx-1) to get the correct result\n![](/assets/images/2021-08-27-09-44-23.png)\n## Precision\n> Degree of reproducibility of a measurement\n\n* Accuracy and precision are different. **Outputs** for calculation is close enough then your calculation is precise but accuracy depends on the whether the output values are close to the actual value means it is accurate.\n* It is also possible that the output is more accurate and less precise and vice versa.\n![](/assets/images/2021-08-31-23-19-59.png)\n\n## Resolution\n> Smallest measurable increment\n\n* Eg. Resolution of 1mv is greater than that of 10mv.\n* But it also depends on the type of application. If 100mv is the measurement required then 10mv is a nice resolution and 1mv resolution will be redundant\n## Span and Range\n> Span: Linear operating range\n\n* This means that the relationship between two values must be a linear relation.\n\n> Range: Simple range (No explanation needed)\n\n## Best Fit Line\n![](/assets/images/2021-08-27-10-03-26.png)\n* Error is the difference between best fit value and the actual value.\n\n![](/assets/images/2021-08-27-10-09-13.png)\n> We take n-2 because measured values are mean and not true values and two variables are involved.\n\n## Computerized measurement and control systems\n\n## Development of software\n> Question to think: How to store the software or computer program in the circuit board?\n\n* General purpose computer is required to build a software for specific purpose computer.\n* Write the code in the laptop and then upload the code on the board.\n\n## Arduino Board\n* Components\n    * Input Pins (6 Analog Pins)\n    * Battery Connector/Receptor\n    * Output Pins (Analog)\n    * USB Connector\n    * 14 Digital pins which can be used as either input or output i.e the pins are configurable.\n* Voltages range from 0V to 5V.\n* PWM - Pulse wave modulated (Explained in further letures).\n* On the actual arduino board, they are represented by a '~' sign.\n* Pin13 has built in LED for testing and hence doesn't require any external LED's in order to test the program.\n\n## Analog to Digital converter\n* For a 10 bit ADC which is generally found in arduino, there would be 1024 values starting from 0 and going to 1023 with increment as 1.\n* This, means that value corresponding to 1023 is 5V.\n* **ADC are linear.**\n\n## Sampling rate of ADC\n* Sampling rate = 9650 samples/sec. This is fixed for an arduino board.\n* Maximum theoretical frequency of the input analog signal is half of this.\n\n## Pulse Wave Modulation (PWM)\n![](/assets/images/2021-09-01-22-26-19.png)\n* As seen in the above figure, Tw is the pulse width and T is the time period of the wave.\n* Average value of periodic wave = $\\frac{Area under one time period}{Time period}$\n* Duty cycle ranges from 0 to 255 corresponding to 0% and 100% respectively.\n\n## Program Structure\n* ![](/assets/images/2021-09-01-22-31-18.png)\n* **Statements under setup function will be executed only once and vice versa for loops.**","url":"https://sameep1234.github.io/notes/notes/2p4SrKmDTQWH2LLlK15oP.html","relUrl":"notes/2p4SrKmDTQWH2LLlK15oP.html"},{"doc":"Lecture 2","title":"Lecture 2","hpath":"courses.Semester 5.Sensors.Lecture 2","content":"\n# Callibration of Sensors and Errors\n\n## Advantages of Linear sensors\n* Callibration will be easy.\n* Scale would be crowded for non-linear sensor at lower temperature range.\n* Calculation becomes easier.\n\n## Extra Points\n* ADC is always linear.\n* Equation written in the program will be stored in the processor.\n* Sometimes, the equation is complicated and hence it becomes difficult for processor to sovle that equation.\n* To solve this, we use table look up. In this, we form a table of x and y values and then search for a particular value. We can use some of the most efficient search algorithm.\n* Callibration means to create a table between the two variables.\n\n## Algorithm for Digital instrument\n* Start ADC by sending a pulse at the start of conversion line and then will wait for end of conversion line.\n* Then read y1 (always an integer discrete value because it is output is binary).\n* Calculate inverse function of x or look up in the table.\n* Display because we want the value to be stable for some point.\n* Add delay.\n* Repeat the above procedure.\n\n## Error and Accuracy\n\n> Difference between measured and true value.\n\n* Formula\n![](/assets/images/2021-08-31-15-32-11.png)\n\n> Accuracy means values that are aligned with standard rules or laws.\n\n* Exact true value to be found is not possible. Thus, we require the best standards and these are called as primary standards.\n* These do no change with temperature, pressure etc.\n* Secondary standards are less accurate and are calibrated using primary standards.\n* These can also be costly and thus we use working standards.\n* Types of errors\n    * Systematic error\n        * Instrument inaccuracies\n        * Faulty design of an experiment\n    * Random errors\n        * Human errors\n        * Noise\n![](/assets/images/2021-08-31-16-01-54.png)\n\n## Calibration procedure\n![](/assets/images/2021-08-31-15-37-26.png)\n* Measure the values generated by intrument under the test and compare it with the values generated by secondary and working stadndards.","url":"https://sameep1234.github.io/notes/notes/3n3DMUBNlHzi2EvIp0oiA.html","relUrl":"notes/3n3DMUBNlHzi2EvIp0oiA.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Sensors.Lecture 1","content":"\n# Introduction to course\n\n## Course Material\n* Principles and applications of Electrical Engineering, 5th Edition by Giorgio Rizzoni, McGraw-Hill\n\n## Assessment and Evaluation\n* Quiz 1: 11%\n* Mid Semester Exam: 22%\n* Quiz 2: 6%\n* Assignments: 11%\n* Project: 15%\n* End Semester Exam: 35%\n* **Open Book Exam on LMS**\n\n> ## **Absolute Grading System**\n\n![](/assets/images/2021-08-29-20-32-26.png)\n\n## Extra Points\n* Engineering applications always require accurate measurement and control over physical quanities.\n* It is easy to transmit signal in electrical form.\n* We might need to process the signal and it is easier to perform operations in electrical form.\n* Thus, we need sensors.\n\n## Transducers and Sensors\n* Convert one form of signal to another form.\n* If you convert non-electrical signal to an electrical signal, it is called a sensor.\n* Thus, sensors are subset of transducers.\n* Actuator is device converting electrical to non-electrical signal.\n\n## Sensor Calibration\n![](/assets/images/2021-08-30-10-01-01.png)\n\n> We need curve fitting to obtain equation from the data points.\n\n## Curve Fitting\n* Process of finding suitable equation between y and x when table of values of x and y is known.\n* Polynomial form in general case\n* Steps in excel\n    * Select the data points.\n    * Go to insert.\n    * Select scatter plot.\n    * Chart will appear.\n    * Right click on any data point on the chart and select trendline option.\n    * Choose Polynomial and select the appropriate order.\n    * **Check the display equation and display R^2 in chart option.**","url":"https://sameep1234.github.io/notes/notes/yTD0dP4MoWNKpCeht3Wz3.html","relUrl":"notes/yTD0dP4MoWNKpCeht3Wz3.html"},{"doc":"Operating System","title":"Operating System","hpath":"courses.Semester 5.Operating System","content":"\n","url":"https://sameep1234.github.io/notes/notes/OGq6U8MXIG3wwETNLR4b6.html","relUrl":"notes/OGq6U8MXIG3wwETNLR4b6.html"},{"doc":"Lecture 7","title":"Lecture 7","hpath":"courses.Semester 5.Operating System.Lecture 7","content":"\n# Process/Processor Scheduling\n\n> Note that we have assumed uniprocessor system and hence we will be studying uniprocessor scheduling\n\n## Sceduling\n* OS handles resources and hence called as resource manager.\n* Processor provides resources in terms of its execution time.\n> Aim: Assign processes to be executed by processor over time, in a way that meets system objectives.\n\n* Response time means the time elapsed between process creation and the **first response** from that process.\n* Throughput means rate of job completion. This means how many processes can be completed in one unit time is called throughput.\n* Processor efficiency means that processor should not be idle and hence should be used to its fullest.\n* Objectives\n    * ![](/assets/images/2021-09-10-10-00-58.png)\n    * Starvation of a process means deprived of processor time.\n    * Example of overhead is process switching.\n* Types\n    * ![](/assets/images/2021-09-10-10-03-11.png)\n    * Short-term sheduling is also known as dispatcher.\n    * ![](/assets/images/2021-09-10-10-04-24.png)\n\n## State transition diagram\n* ![](/assets/images/2021-09-10-10-05-29.png)\n* We can put a newly created process directly into ready state if there is enough memory and if there is not enough memory, we put it in ready/suspended state.\n* This task is done by long-term scheduling and the rest is self-explanatory.\n* **Swapping** happens when the process is **swapped** from {ready and ready/suspend} and {block and blocked/suspend}.\n* Same thing in a different way\n    * ![](/assets/images/2021-09-10-10-13-06.png)\n\n## Long-Term Scheduling\n* ![](/assets/images/2021-09-10-10-13-29.png)\n* Some questions\n    * Will it be possible to predict the I/O requirements?\n        * In case of interactive jobs, it is not possible, but for **batch jobs**, it is possible.\n    * Similar for expected execution time\n\n## Medium-Term Scheduling\n* ![](/assets/images/2021-09-10-10-17-23.png)\n\n## Short-Term Scheduling\n* ![](/assets/images/2021-09-10-10-17-45.png)\n* Whenever there is a need for **process switch**, dispatcher comes into the picture.\n* Process needs to switch when process is terminated, interrupt occurs, I/O operations etc.\n* Criterias of classification of short-term scheduling\n    * User-oriented\n        * Response time\n        * This means to give response as fast as possible from user perspective.\n    * System-oriented\n        * Effective and efficient utilization of the processor.\n        * Designers must keep in mind while deciding the dispatcher strategy, the processor should not be underutilized.\n    * Performance related\n        * Quantitative and easily measure.\n        * Eg. Response time and throughput.\n    * Non-performance related\n        * Qualitative and hard to measure.\n        * Eg. User-Satisfaction\n* Interdependency in criterias\n    * User oriented and performance related.\n        * ![](/assets/images/2021-09-10-10-29-24.png)\n        * Turnaround time is approriate for batch jobs and not for interactive jobs because in interative jobs, user interaction plays a key role. \n        * For example, a process is waiting for a user input and the user has gone to take a break, then it will remain stagnant and hence turnaround time will increase drastically.\n        * The deadlines are in real-time systems or embedded systems.\n    * User oriented and non-performance related\n        * ![](/assets/images/2021-09-10-10-39-44.png)\n    * System-oriented and performance related\n        * ![](/assets/images/2021-09-10-10-40-58.png)\n    * System-oriented and non-performance related\n        * ![](/assets/images/2021-09-10-10-43-31.png)\n        * In the third criteria, we require medium-term and long-term scheduling because memory is one of the resource that is used by the process and processor.\n\n## Priority based scheduling\n* ![](/assets/images/2021-09-10-10-45-56.png)\n* Each ready queue has different priority, but processes inside the **same ready queue, have the same priority.**\n\n> Now this may lead to starvation problem. Suppose, there are 3 ready queues and at any particular instance of time, there is at least one process in the first two ready queues. This means that the processes in the third queue will not be allocated any time. This is the starvation problem. \n\n> To solve this, we allow a process to change its priority-based on its age or execution history. This means that whenever some process has been executed for some time and is to be again inserted in the ready queues, its priority should be lowered down.\n\n## Various Scheduling Policies\n* ![](/assets/images/2021-09-10-10-55-01.png)\n* Out of all these, round robin and feedback are the most practical theories.\n* Others are good in theory, but not in practice.\n\n## Selection Function\n* ![](/assets/images/2021-09-10-10-56-15.png)\n\n## Decision Mode\n* Specifies the instance in time at which the selection function is executed.\n* Two categories\n    * ![](/assets/images/2021-09-10-11-00-20.png)\n    * For non-preemptive, the OS will never put a process in blocked/removed state unless it is fully terminated or blocked because of I/O.\n    * Round robin is a strategy where every process is assigned some amount of time and even if process is still able to run, it is not blocked, it is put back directly into Ready state and the next process is dispactched to running state.\n\n> Which mode should be preffered?\n* Preemptive as it prevents one process from **monopolizing** the processor.\n* This means that a very big process will not block others till it iterminates.\n* Even though there would be some overhead of frequent switching of the process, but its advantage outweighs its disadvantage.\n\n## Process States for Linux\n* ![](/assets/images/2021-09-10-13-24-18.png)\n* Commands related to processes in ubuntu\n    * lscpu = Gives information regarding the processor in your system.\n    * ps -aux = Gives information about the processes that are currently there in the system.\n    * Note: ps itself is the command but it won't provide much information as ps -aux.\n* System calls\n    * fork() = Create a new process\n    * exec() = Execute other programs in current process\n    * wait() = Wait for child process to terminate\n    * exit() = Terminate the execution","url":"https://sameep1234.github.io/notes/notes/wJrWqZ9Wecg8IV3vbuPwG.html","relUrl":"notes/wJrWqZ9Wecg8IV3vbuPwG.html"},{"doc":"Lecture 6","title":"Lecture 6","hpath":"courses.Semester 5.Operating System.Lecture 6","content":"\n# Process Control and Process Management\n\n> Process management will be studied in UNIX SVR4 file system.\n\n## Functions of OS kernel\n* ![](/assets/images/2021-09-06-08-10-29.png)\n* ![](/assets/images/2021-09-06-08-13-17.png)\n* ![](/assets/images/2021-09-06-08-13-59.png)\n\n## Process Creation\n* Once new process is decided to be created, OS performs following tasks\n    * Assigning unique ID.\n    * Allocating space in memory.\n    * Initializing PCB (The most important part of a process).\n    * Setting up of appropriate links.\n    * Creating or expanding other data structures.\n\n## Process Switching\n* For small amount of time, some process will run and then other will run. This time is very small and hence we see it like all the processes are running parallely.\n* Thus, when one process goes away and other process needs to be loaded, this is called process switching.\n* Process switching is totally different than mode switching. In a process execution, there may occur mode switching. \n* Mode switching means switching from user to kernal mode vice versa.\n\n> So why is process gets switched?\n* ![](/assets/images/2021-09-06-08-23-14.png)\n\n* Reasons for switching (Eg.)\n    * Clock interrupt (time slice expired)\n    * I/O Interrupt (an event occured)\n    * Memory fault (trap) - Accessing memory which is not available.\n\n* Mode Switching - When a running process changes its mode from one to other.\n    * While switching the mode, processor state information of PCB is saved (user to kernel) and restored back (kernel to user).\n    * Mode switch, thus becomes the subset of prcess switch.\n    * Thus, process switch will take more time then mode switch.\n* Steps in process switch\n    * ![](/assets/images/2021-09-06-08-28-44.png)\n\n> Is OS a process?\n* Basically OS is a code/program which is in between hardware and application that we run.\n* Designs of OS to explain execution of OS\n    * ![](/assets/images/2021-09-06-08-33-06.png)\n\n## Different designs\n* Non-process Kernel\n* Execution within User Processes\n    * ![](/assets/images/2021-09-06-08-36-42.png)\n* Process-based OS\n    * ![](/assets/images/2021-09-06-08-37-48.png)\n    * More like microkernel architecture.\n\n## Process management in UNIX SVR4\n* SVR4 stands for System V Release 4.\n* **Most** of the the OS executes in user process.\n* System processes - Kernel mode only\n* User Processes\n    * User mode to execute user programs and utilities.\n    * Kernel mode to execture instructions that belong to kernel\n* Process with ID 1 = Linux boots and creates a swapper process which in turn creates init process with ID = 1.\n* This init process creates all the process required to run Linux on boot up.\n* init process works only in kernel mode.\n* Some other process that execute only in kernel mode include dispatcher etc.\n* States\n    * ![](/assets/images/2021-09-06-08-47-29.png)\n    * Fork is the system call used to create new process.\n    * Two extra states\n    * Blocking state is called sleep state.\n    * Zombie state means that process is executed but some imformation realted to data structure and all is still saved for accounting purposes.\n    * Here running state is divided into two parts viz user running state and kernel running state.\n    * At a time, a process can be in either user running state or kernel running state but **not both.**\n    * Preempted is almost similar to ready to run in memory state. In fact they are managed by a common combined queue.\n* UNIX Process Image\n    * A process in UNIX is a set of DS that provide the OS with all the information necessary to manage and dispatch processes.\n    * Process image in UNIX can be categorized as follows\n        * User-Level Context\n            * ![](/assets/images/2021-09-09-11-14-50.png)\n        * Register Context\n            * ![](/assets/images/2021-09-09-11-15-08.png)\n        * System-Level Context\n            * ![](/assets/images/2021-09-09-11-15-54.png)\n            * Most of the information regarding PCB is maintained in process table and they **must be accessible to kernel.**\n            * U Area - Most of the process control information is present in U area. This is also a part of PCB. However, majority of information related to PCB is present in Process table.\n            * Information in U area is accessible to a process only if it is in running state.\n            * 1st and 3rd are static DS means they will not change during the life of a process.\n            * 2nd and 4th are dynamic data structure and will change according to various states of the process.\n* Process Creation in UNIX\n    * fork() is used to create new processes.\n    * ![](/assets/images/2021-09-09-11-26-30.png)\n    ![](/assets/images/2021-09-09-11-27-38.png)\n    * If returned value is 0, it means it is child process and vice versa.\n    * Once child is created, then it depends on the situation which one will execute.\n            \n## Extra Points\n> What is in process table?\n* ![](/assets/images/2021-09-09-11-22-44.png)\n\n> What is in U area?\n* ![](/assets/images/2021-09-09-11-23-18.png)","url":"https://sameep1234.github.io/notes/notes/iulDI2JKiPfwvpMA31XAa.html","relUrl":"notes/iulDI2JKiPfwvpMA31XAa.html"},{"doc":"Lecture 5","title":"Lecture 5","hpath":"courses.Semester 5.Operating System.Lecture 5","content":"\n## Suspended Process\n* It is possible that at one point all the processes are waiting for I/O and processor will remain idle.\n* Issues to address\n    * Processor could be idle most of the time.\n* Solution\n    * **Swap these processes to disk to free RAM and execute some new processes**.\n* Blocked state, thus, becomes suspend state when swapped to disk.\n* Now 5-state gets converted to 6-state model\n\n## 6-state model\n* ![](/assets/images/2021-09-01-08-08-39.png)\n* Notice that blocked processes are transferred to suspended processes but suspened processes are directly transfered to ready state.\n* OS now has two ways\n    * Admit new processes\n    * Activate previously suspended processes\n* Subsets of suspend state\n    * Blocked/Suspend: Process in secondary memory and awaiting an event.\n    * Ready/Suspend: \n\n## 7-state model\n* ![](/assets/images/2021-09-01-08-13-46.png)\n* Newly created process will remain in ready/suspend state until there is memory avaible to move it to ready state.\n* Eg. When booting up, memory is awailable and hence it is possible to directly admit new process into ready state.\n* New state transitions\n    * ![](/assets/images/2021-09-01-08-22-08.png)\n\n## Characterisitcs of suspended processes\n* Process not immediately available for execution because it is in secondary memory.\n* It may or may not be waiting for an event. It may be moved only to free some RAM.\n* \"Agent\" puts the process in suspended state. Agents include either itself (Eg. Some process which occur only periodically), parent procees or OS in order to preclude its execution.\n* Process may not be removed until agent orders the removal. Most of the time agent is OS.\n\n## Reason for process suspension\n* ![](/assets/images/2021-09-01-08-32-36.png)\n\n## Relation between process and resource\n> Recap: OS is a resource manager. Process is a program in execution.\n\n![](/assets/images/2021-09-01-08-38-45.png)\n* **Main memory as a resource means**\n* Virtual memory is extention of secondary memory into main memory.\n* Some part of HDD is considered in RAM.\n\n## Data Structures\n* OS must have information about current status and all processes and all resources.\n* Thus, OS maintains tables for each of the functionalities it offers\n* Memory Table\n    * Keep tracks of main and secondary memory.\n    * Must include information\n        * Allocation of main memory to processes.\n        * Allocation of secondary memory to processes.\n        * Protection attributes for access to shared memory regions.\n        * Information required to manage virtual memory.\n* I/O Table\n    * Manage I/O device and channels of computer.\n    * Must include information\n        * Availability of I/O device.\n        * Status of I/O operation whether I/O device is available or not.\n        * Location in main memory for source and destination\n* File Table\n    * Must include information\n        * Existence of files.\n        * Location on secondary memory.\n        * Current Status.\n        * Others (Who can access? etc.)\n* Process Table\n    * Must include information\n        * Location of **process** in the memory.\n        * Process attributes.\n    * Memory, I/O and files are managed on behalf of processes, so there has to be some reference to these resources in process tables. (Like foreign key)\n\n## Physical manifestation of a process\n> Menifestation means presentation.\n\n![](/assets/images/2021-09-01-08-53-11.png)\n\n* Elements of process image\n    * User Data\n    * User Program\n    * User Stack\n    * Process Control Block (PCB)\n\n## Process Location\n* It is not required in main memory. Someting called virtual memory also exists.\n* Process image is maintained as a contiguous block of memory (**in secondary memory**).\n* Maintained in secondary memory (majority of its part).\n* Some part should be loaded in main or at least in virtual memory.\n* Moreover, to execute process, some part must be in main memory.\n* Thus, only needs to know which parts of process are in main and secondary memory and where are they located.\n\n## Attributes in PCB\n* Process identification\n* Processor state information\n* Process control information\n\n## Process Identification\n* Identifier of this process.\n* Identifier of parent process.\n* User identifier (To which user this process belongs to?)\n\n## Processor state information\n> Processor state is always **stored in register.**\n\n* User Visible registers\n    * Most of the times they are the address registers and data registers\n    * It means that these registes can be directly visible by programs running in user-mode.\n    * Generally they are 8-32 regsiters but some RISC implementations may have over 100.\n* Control and status registers\n    * Program counter - Contains address of the next instruction.\n    * Condition codes - Result of the most recent ALU operation.\n    * Status information - Contains inturrept flags and execution mode (They are also known as program/process status mode).\n* Stack Pointers (Registers)\n    * Process image uses stack to maintain parameters and calling addresses for procedures and system calls.\n    * There could be multiple stacks and each stack has a stack pointer pointing to the top of the stack.\n\n## Process control information\n> Manages additional information that is needed by the OS to control and coordinate the various active processes.\n\n* These include the following\n    * ![](/assets/images/2021-09-09-10-01-56.png)\n    * IPC stands for Inter-process communication\n    * Process privileges includes \"What area can be accessed by the process\" or \"Which mode?\" etc.\n* Scheduling and State information\n    * ![](/assets/images/2021-09-09-10-03-54.png)\n* Data Structuring\n    * ![](/assets/images/2021-09-09-10-04-13.png)\n    * For each state (blocked, ready etc.) there would be one queue and generally they are made using linked list.\n* IPC\n    * ![](/assets/images/2021-09-09-10-05-14.png)\n    * It occurs when two process talk to each other\n* Process privileges\n    * ![](/assets/images/2021-09-09-10-05-56.png)\n    * What kind of file, area of memory etc.\n* Memory Management\n    * ![](/assets/images/2021-09-09-10-06-58.png)\n* Resource Ownership and Utilization\n    * ![](/assets/images/2021-09-09-10-06-39.png)\n\n> ## What does Process image contain?\n* ![](/assets/images/2021-09-09-10-08-11.png)\n\n## Role of PCB\n* It is the most important DS.\n* It contains most of the information regarding a process excpet stack pointers.\n* It manages the processes.\n* Thus, it requires protection.\n    * If not done then,\n        * It may damage the block and destroy OS's ability to manage the processes.\n        * Any change in design will affect many other modules of OS.","url":"https://sameep1234.github.io/notes/notes/WRmiZB2hMRgBOBAUqcUGI.html","relUrl":"notes/WRmiZB2hMRgBOBAUqcUGI.html"},{"doc":"Lecture 4","title":"Lecture 4","hpath":"courses.Semester 5.Operating System.Lecture 4","content":"\n# Process: Description and Control\n\n## Requirements of OS as a Process Manager\n* Interleave the execution of multiple processes. Here we assume that there is always a single processor system.\n* Allocate resources to processes and protect them from each other.\n* Enable process to share and exchange information. Eg. Parent and Child processes.\n* Enable synchronization among processes.\n\n## Process\n* Program in execution.\n* Instance of program running\n* Entity that can be assigned to and executed on a processor\n* **Unit of activity defined by program, its states and its associated resources.**\n* Process Elements\n    * Program code (generally shared)\n    * Set of data\n    * Attributes that describes the state\n    \n## Attributes\n* Indentifier - Unique ID of each process\n* State - Current situation of the process (Either running or not running)\n* Priority - Self explanatory\n* Program Counter - Keeps information about next process to be executed\n* Memory pointers - Pointers to program code and data to be processed. Along with this, it also includes shared memory blocks.\n* Context data\n* I/O status information - Eg. List of files in use by the process etc.\n* Accounting information - Eg. Time limits, clocks used etc.\n\n> In short the attributes can be called as meta-data.\n\n## Process Control Block (PCB)\n* All the attributes discussed above are part of this block.\n* Basically, it is a type of data structure.\n\n> **Thus, process is a combination of program code, associated data and PCB**\n\n## Running on single resource\n* To manage multiple processes on a single resources then scheduling comes to the picture.\n* Thus, you allocate certain span of time to each process and once it gets finished, immediately another process starts.\n* It gives an appearance that every process runs at the same time because the total time taken by all the process combined is really small.\n* **Trace - List of instructions that are executed by a process.**\n* **Dispatcher - Program that switches the processor from one process to another.** It is a type of short term scheduler.\n\n## Execution of Processes by Processor\n* Suppose that there are some processes which have a lot of instructions to execute. This might take time which is greater than the allocated one.\n* So in the middle of the execution of a process, dispatcher stops the execution and decides which process should go next.\n* Once decided, either execution of new process starts or execution of old process continues.\n* Then, suppose there is an I/O request. Since this is a slow operation, the dispatcher will allow another process to run on the processor.\n* This goes on and on untill all the processes are executed.\n\n> The above method is from **processor POV** and is called **interleaving of processes** and the OS manages this through **dispatcher**. From **process POV**, the process gets executed sequencially.\n\n## Process States\n* Two states\n    * Running\n    * Not running\n* Transition from **not running** to **running** state is called **dispatch** and is called **pause** for the opposite scenario.\n* There can be at most only one process in running state at a given instance of time.\n* There are 'n' number of processes in the non-running state.\n* Thus, to manage all these processes, we need **queue** as the data structure.\n\n## Note\n* The below picture lists conditions under which a process can be created or terminated.\n* ![](/assets/images/2021-08-29-15-16-50.png)\n\n* Process spawning means event where a process creates a new process.\n\n## 5-State Process Model\n* Conditions when the process which is running will pause and enter in the queue:\n    * Time slot alloted to the process is over.\n    * Made some I/O request which may take time.\n* Now, dispatcher needs to identify which processes are ready to be executed and then dispatch it from the middle of the queue.\n* This process is time consuming and complex.\n* To resolve this, OS must maintain multiple queues. Since there are two types of processes, one who did not terminate but their allocated time got over and others who are waiting for I/O or other resouces.\n* This, in turn is the 5-state process model.\n* Total states in this model\n    * New - Process that has just been created but not admitted to the pool of the ready state processes.\n        * **Not loaded in main memory but is created.**\n        * This means that PCB for that process has been created but its corresponding data and program has not been loaded/created in the main memory.\n    * Ready\n    * Blocked/Waiting\n    * Running\n    * Exit (Earlier it was not a state but now it is) - Process which has been released from the pool of processes.\n        * However, there is some part of PCB left in main memory for accounting.\n\n![](/assets/images/2021-08-29-15-32-07.png)\n\n## State Transitions\n\n* ![](/assets/images/2021-08-29-15-36-29.png)\n\n* Ready and Blocked process can enter directly to exit state when its parent process has terminated or the process is terminated by the OS.\n* When process spawning occurs, then child process is created in the new state.\n* Hang state is equivalent to blocked/waiting state.\n\n## Multiple Blocked Queue\n* Suppose there are 10 processes which are in blocked queue waiting for HDD to get accesible and there are 90 processes that are in hang mode.\n* Now once HDD is ready to be accessed, OS will have to search this blocked queue and move all these processes to ready state.\n* This is again time consuming and complex. Hence multiple blocked queue model emerged.\n\n![](/assets/images/2021-08-29-15-48-46.png)","url":"https://sameep1234.github.io/notes/notes/0cHUe8OjK8Sb4TkMg9EhP.html","relUrl":"notes/0cHUe8OjK8Sb4TkMg9EhP.html"},{"doc":"Lecture 3","title":"Lecture 3","hpath":"courses.Semester 5.Operating System.Lecture 3","content":"\n# System Calls and Architecture of UNIX\n\n## Intro to system calls\n* System calls are the most important and crucial concept in OS. It is basically a link connecting user to the OS.\n* Formally, it is a **programming interface (like waiter connecting customers to kitchen in a restaurant)** to use the services provided by the OS. They are the programs that help give access to the functionalities provided by the OS.\n*  They are written in a high-level language like C or C++.\n* POSIX API is used for Linux and Win32 API is used for windows.\n\n## Implementation of System Call\n* Associated with each function call. Eg. If you call a function printf() in C, then it internally calls an associated system call telling the OS to display the written part on the scree.\n* Every OS have a list of system call along with ID's.\n* System call interface maintains a table with ID's as indices.\n* This interface invokes a particular system call in OS kernel and returns the status and return-values if any.\n* Details are hidden from programmer by the API.\n\n## Relationship between API, System Call and OS\n\n![](/assets/images/2021-08-29-10-48-06.png)\n\n## Types of system calls\n* File Management - Eg. create, open, close etc.\n* Device Management - request, release, read, write etc.\n* Protection - control access, get and set permissions etc.\n* Information maintenance - get time, set process etc.\n* Communications - create, delete communication, send or recieve messages etc.\n\n### Architecture of UNIX\n\n* ![](/assets/images/2021-08-29-11-08-15.png)\n\n* UNIX is an OS just like Linux.\n* In fact linux is based on UNIX but is more complicated than UNIX.\n* UNIX system follows monolithic approach\n* UNIX System Kernel\n\n![](/assets/images/2021-08-29-11-10-53.png)\n\n* **In Linux or UNIX, everything is in terms of files. Thus, it becomes crucial to understand file system.**","url":"https://sameep1234.github.io/notes/notes/Oj3uiXKth6ZgUASqln4Vi.html","relUrl":"notes/Oj3uiXKth6ZgUASqln4Vi.html"},{"doc":"Lecture 2","title":"Lecture 2","hpath":"courses.Semester 5.Operating System.Lecture 2","content":"\n# Evolution of OS and Kernel\n\n## Evolution of OS\n* Serial Processing\n* Simple Batch Systems\n* Multiprogrammed Batch Systems\n* Time Sharing Systems\n* many others\n\n## Serial Processing\n* There was no OS.\n* To run the program, we would have to type a command for everything.\n* A program at that time was called a job which is a set of instructions along with the data on which the instructions need to be executed.\n* Issues\n    * Scheduling\n        * Fixed amount of time allocated to each instruction.\n        * Conflict between instructions requiring more or less time.\n    * Setup Time\n        * Loading of compiler and program is time consuming\n\n## Simple Batch System\n* Monitor Program were used which were kind of OS - A very rudimentary OS.\n* It is a software that controls the sequence of events.\n* No direct access to users unlike Serial Processing.\n* Job is submitted to an operator who batches similar instructions together and places them on the input device/hardware.\n* In this way, the time consumed is averaged out and the processor can be utilized to its maximum.\n* Control is given back to monitor after program gets terminated.\n\n> Monitor is a special program that manages execution of each program in the **batch**. It controls the sequence of events. Resident monitor (another name for simple monitor) is software always in memory. It reads in job and gives control to the processor which in turn returns the control back to monitor\n\n> Processor executes instructions from the memory i.e monitor which resides in the memory. It gains control from monitor to execute the task and once completed returns the control to monitor.\n\n> JCL (Job control language) - It is a programming language that provides instruction to the monitor about the compiler and data to be used.\n\n* Modes of operation\n    * User mode (Analogy: Normal Mode) - Programs submitted by the user to the memory are executed in this mode. **Not all instructions may be executed.**\n    * Kernal mode (Analogy: Admin Mode) - Part of a modern OS that actually performs I/O Management, Process Management etc. Nowadays, we have many other utility programs running which are a part of OS, but kernal is the most important one which manages the above mentioned things.\n\n* Issues\n    * Processor remains idle.\n    * Slow compared to processor even with automatic job sequence.\n\n![](/assets/images/2021-08-28-23-38-27.png)\n\n## Uniprogramming\n\n> Processor must wait for I/O instruction to complete before proceeding further.\n\n## Multiprogramming\n\n> Opposite of uniprogramming. Still there will be some waiting time but at least it can be reduced and hence is better than uniprogramming.\n\n## Time sharing systems\n* The program is being shared through different users and different monitors. Thus, can be used to handle multiple interactive jobs.\n* Processor time is shared among multiple users.\n* This time is in milli or micro seconds. This is called short burst or quantum of computation.\n\n![](/assets/images/2021-08-29-00-06-36.png)\n\n## OS Structure\n* *For general purpose OS, the program is very large.*\n* Ways to structure OS\n    * Monolitic Approach (Analofy coding in C where there are no classes) - Everything combined in one place.\n        * Eg. Older LINUX and UNIX\n        * Advantages\n            * Speed as everything is connected\n            * Performance\n        * Disadvantages\n            * Difficult to maintain and modify\n    * Layered Approach - OS divided into number of layers.\n        * Layer 0 = hardware and Layer n = user interface layer\n        * A particular layer can use functions and services of **lower-level layers only (layers below it).**\n        * Eg. Older windows versions\n    * Microkernels - Move as much functionalities as possible to user mode from kernel mode. \n        * Unlike that in layered and monolithic where majority of the functionalities is available in only kernal mode.\n        * I\\O and interrupt management, primitive memory management, inter-process communication and basic scheduling were kept in kernel mode.\n        * All other functionalities will be running in user mode.\n        * Advantages\n            * Time is reduced significantly as the time to change the mode from user to kernel and vice versa is almost completely diminished.\n            * Porting of OS to newer architecture becomes easier (will be covered in upcoming lectures).\n            * More reliable because less code is running in kernel mode.\n            * More secure as less code has to be valudated in kernel.\n        * Disadvantages\n            * Performance overhead to change the mode.\n        * Eg. Mach, MINIX, Windows NT Client-Server\n    * Modules - Most moedern OS implement kernel modules\n        * These are loadable kernel module\n        * Uses OOP\n        * Similar to layers but is more flexible\n        * Eg. Device Drivers (These are loaded as needed within the kernel)\n        * Solaris Modular Approach (will be covered in upcoming lectures).\n    * Hybrid Approach - Combines multiple approaches to address performance, security and usability.\n        * Eg. Linux and Solaris = monolithich + modular, windows = monolithic + microkernel and Mac OS and IOS = Darwin which is microkernel and BSD Unix kernel implemented over layered model","url":"https://sameep1234.github.io/notes/notes/YWtnvQOHrej4digmZkK86.html","relUrl":"notes/YWtnvQOHrej4digmZkK86.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Operating System.Lecture 1","content":"\n# Introduction to Operating System\n\n## Course Material\n* Textbook - Operating Systems: Internals and Design Principles, 9th Edition, by William Stallings, Pearson\n\n## Computing System\n\n> Basic purpose is to perform computation on input data and generate results\n\n* Comprised of hardware, software and data.\n* Secondary storage stores all the programs (like code in C).\n* To execute it, first load it into the memory (RAM).\n* For any program to run by the processor, first fetch, then execute and then finally check for the interrupts.\n\n> Operating System will perform the task of loading the program from secondary memory (Hard Disks) to main memory (RAM)\n\n## Functions of OS\n* I/O Management\n* Process Management\n* Memory Management\n* File Management\n\n> Operating system is a program that acts as an intermediary between a user of a computer and the computer hardware.\n\n## Objectives of OS\n* Convenience - Makes computer easy to use\n* Efficiency - Manages resources efficiently\n* Ability to evolve - Easy to adapt changes\n\n## Users of Computing System\n* End User - Use the application as it is. Eg. Excel Users\n* Programmer - Developing applications. Need to understand utility programs and OS\n* Operating System Designer/System Level Programmer - Creates OS/**Works with computer hardware**/Develop or write a driver\n\n> Driver is a piece of software that understands a hardware. It understands the internals of the attached hardware.\n\n## Services provided by OS\n\n> Through these services OS attains \"Convenience\".\n\n* Program development\n* Program execution\n* Access I/O devices (Eg. CDs, Pendrives)\n* Controlled access to files (Provides protection in multi-access systems (Eg. Multiple users in same laptop))\n* System access\n* Error detection and response (Eg. Errors in reading CDs)\n* Accounting (Collect usage statistics/Monitor performance)\n\n## Resource Management\n* Movement\n* Storage\n* Processing of data\n\n> OS is a program that is executed by the CPU! (Kind of ironic. OS handles CPU but is executed by CPU XD)","url":"https://sameep1234.github.io/notes/notes/ze7K28mUdIHg5Z137Vucz.html","relUrl":"notes/ze7K28mUdIHg5Z137Vucz.html"},{"doc":"Music","title":"Music","hpath":"courses.Semester 5.Music","content":"\n","url":"https://sameep1234.github.io/notes/notes/YfEhInqFt0RCqjRYQvTlf.html","relUrl":"notes/YfEhInqFt0RCqjRYQvTlf.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Music.Lecture 1","content":"","url":"https://sameep1234.github.io/notes/notes/BpPndOdyo69WT64AEoDns.html","relUrl":"notes/BpPndOdyo69WT64AEoDns.html"},{"doc":"Material Science and Engineering","title":"Material Science and Engineering","hpath":"courses.Semester 5.Material Science and Engineering","content":"\n","url":"https://sameep1234.github.io/notes/notes/SkPPj7voTTRpF7d0XMYNV.html","relUrl":"notes/SkPPj7voTTRpF7d0XMYNV.html"},{"doc":"Lecture 7","title":"Lecture 7","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 7","content":"\n","url":"https://sameep1234.github.io/notes/notes/CvD3iRergSFtli6wbbnRF.html","relUrl":"notes/CvD3iRergSFtli6wbbnRF.html"},{"doc":"Lecture 5","title":"Lecture 5","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 5","content":"\n# X-ray Diffraction (XRD)\n\n## Key Points\n* [Site](http://calistry.org/calculate/latticePlanesMillerIndices) to view miller indices and planes easily.\n* When two waves are in sync with the phase of each other, it is called constructive interference and vice versa.\n* In case of constructive interference, the amplitude of the final wave will be added and vice versa.\n* ![](/assets/images/2021-09-08-14-54-08.png)\n* Here d = interplanar spacing will remain the same for a particular material.\n* We would be using copper k-alpha. Advatage is immediate cooling of the metal.\n* Copper k-beta gives very low intensity and hence is avoided for XRD study.\n* Wavelength of XRD = 1.54 angstrom (fixed for all calculation).\n* **For diffraction to occur, 2dsin($\\theta$) = n$\\lambda$ must be satisfied where n = order of reflexion.**\n* **Always take n=1 unless specified. n = 1 implies first order diffraction.**\n\n> Key Question: How to decide which element to take (like Copper, Molebdenum or Cobalt)?\n* So in such cases, first we check the intentsity and then the d-spacing as it remains the same for the same material.\n\n## Bragg's law\n* ![](/assets/images/2021-09-08-14-47-40.png)\n\n## X-Ray Diffractogram\n> Curve between intensity and diffraction angle (2$\\theta$).\n\n## How to identify which crystal structure? (SC, BCC or FCC)\n* For that we have to calculate $h^2$ + $k^2$ + $l^2$ where h,k and l are the miller indices.\n* Then use the below image.\n    * ![](/assets/images/2021-09-08-16-03-14.png)\n    * For SC, always calculate till 8th step and **show that 7 is absent/missing.**\n    * If 7 comes in the series then multiply the whole series with 2 to get BCC structure.\n    * ![](/assets/images/2021-09-08-16-50-04.png)\n\n## How to identify material based on lattice parameter?\n* First thing to **remember** is that angle is **2$\\theta$** with **intensity.**\n* Then use the below image to follow the steps.\n    * ![](/assets/images/2021-09-09-07-53-22.png)\n    * **Note: 2$\\theta$ values may differ based on XRD**\n    * Now, if any of the first 3 columns comes whole integer, then we get our $h^2$ + $k^2$ + $l^2$.\n    * Otherwise, we go on multiplying with 4, then with 5 and so on untill we get a whole integer and that becomes the value of $h^2$ + $k^2$ + $l^2$.\n    * To calculate a, find average of the **peaks**.","url":"https://sameep1234.github.io/notes/notes/FUatAGaTOUs6oPRQYOUmq.html","relUrl":"notes/FUatAGaTOUs6oPRQYOUmq.html"},{"doc":"Lecture 4","title":"Lecture 4","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 4","content":"\n# Directions and Planes\n\n## Density Computation\n* $\\rho$ = $\\frac{nA}{VcNa}$\n* Here $\\rho$ is the density, n is the number of atoms in a unit cell, A is the atomic mass of the element, Vc is the volume of unit cell and Na is the avogadro's number.\n\n## Crystal Directions\n> These include linear density and planar density\n\n* ![](/assets/images/2021-08-29-18-16-42.png)\n\n> Always divide by the biggest number. Eg. 4th case in the above image.\n\n## Extra points\n* To represent direction, use square brackets.\n* To represent plane, use round brackets.\n* Parallel planes belong to the same **family** of planes.\n* To represent family of planes, use curly brackets.\n* To represent family of directions, use angular brackets.\n* There should not be comma between numbers in either of the cases.\n\n\n> Why are planes in a lattice important?\n* Determining crystal structure\n* Plastic deformation\n* Transport properties\n\n## Miller Indices\n* This is one of the information required to study X-Ray defractogram\n* Procedure to find these indices\n    * Note the intercepts made by plane in terms of **lattice constants** a,b and c.\n    * Note the coefficient of the intercepts.\n    * Find inverse of them.\n    * Find LCM and multiply them by LCM.\n    * These points that you get are the Miller indices.\n\n> Example of calculating Miller indices\n\n![](/assets/images/2021-08-29-18-27-28.png)\n\n## How to draw planes?\n* Quite confusing, read book\n\n## Angle between planes\n![](/assets/images/2021-08-29-18-43-28.png)\n\n## Linear and Planar Density\n![](/assets/images/2021-08-29-18-45-11.png)\n\n* This is **atomic** density.\n* FCC Structure\n    * Case 1 (100)\n        * Linear Density = $\\frac{number of atoms}{length of the vector}$ = $\\frac{1}{a}$\n        * Planar Density = $\\frac{number of atoms}{area of the plane}$ = $\\frac{2}{a^2}$\n    * Case 2 (110)\n        * Linear Density = $\\frac{2}{\\sqrt{2}a}$\n        * Planar Desity = $\\frac{2}{\\sqrt{2}a^2}$\n    * Case 3 (111)\n        * Linear Density = $\\frac{1}{\\sqrt{3}a}$","url":"https://sameep1234.github.io/notes/notes/0MwJpw5Ai8WlLrE5bLyaQ.html","relUrl":"notes/0MwJpw5Ai8WlLrE5bLyaQ.html"},{"doc":"Lecture 3","title":"Lecture 3","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 3","content":"\n# Crystal Lattice\n\n### Sorry for the inconvinience but please refer this [site](https://unread.parthshah.ml/notes/omAwLOv3wYSYrihgzYlu4.html) for lecture 3 notes.","url":"https://sameep1234.github.io/notes/notes/hvEDw5kSoIcX03j2YJdL9.html","relUrl":"notes/hvEDw5kSoIcX03j2YJdL9.html"},{"doc":"Lecture 2","title":"Lecture 2","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 2","content":"\n# Atomic Structure, Bonding and Energy\n\n## Classification of materials\n![](/assets/images/2021-08-28-10-22-07.png)\n\n* Types of materials\n    \n    * Semiconductor\n    * Polymer\n    * Metals\n    * Ceramics\n    * Biomaterials\n    * Composites\n\n> Composite material is formed by the combination of two or more types of materials. But why do we need composite materials?\n\n* Reduce Weight\n* Lowers the cost of the material\n* Gives strength to the device\n* **Mediates propogation of charge/current**\n\n## Atomic structure\n\n* Atomic mass unit = 1/12 of the mass of most common isotope of carbon.\n* Atomic weight is weighted average of atomic masses of naturally occuring isotopes.\n* A mole is amount of matter with mass in grams equal to atomic mass in amu.\n* A mole of carbon has a mass of 12 grams.\n* **One mole has 6.023 x 10^23 number of atoms (also called as Avogadro's number)**\n* Number density formula: \n\n![](/assets/images/2021-08-28-15-14-09.png)\n\nHere Nav = avogadro's number, $\\rho$ = mass density and A = atomic mass\n\n* De broglie wavelength: \n\n![](/assets/images/2021-08-28-15-58-00.png)\n\n* Heisenberg Uncertainty Principle: \n\n![](/assets/images/2021-08-28-15-58-34.png)\n\n### Electronic Structure of isolated atoms\n* n  principal shell (1,2,3... or K,L,M...)\n* l = anular (sub shell) (s,p,d,f)\n* ml = magnetic (-l to +l including 0)\n* ms = spin (1/2, -1/2)\n\n> Ionization potential is the energy required to pull out a valence electron (in vacuum) and by convention it is positive. Electron affinity is energy gained by putting an electron in (from vacuum) and by convention it is negative.\n\n> Electronegativity is the measure of how likely an atom will take up or give up an electron.\n\n* Valence electrons determine the physical properties viz chemical, electrical, thermal and optical\n* Electropositive elements easily give up electrons to become positive ions. These generally rest in the left sife of the periodic table and vice versa for electronegative elements.\n* This means electronegativity is smaller on left side and larger on the right side.\n\n## Physical properties in Periodic table\n![](/assets/images/2021-08-28-16-08-27.png)\n\n## Bonding in solids\n* At large distances, interactions are negligible and at small distances each atom exerts forces on the other.\n* These include, force of attraction and that of repulsion.\n\n![](/assets/images/2021-08-28-16-12-56.png)\n\n* Fnet = Fr + Fa. At equilibrium Fnet = 0\n\n## Potential Energy\n\n> **Here potential energy and energy are used interchangebly.**\n\n* Energy is integration of foice wrt the radius.\n* Enet = Ea + Er.\n\n![](/assets/images/2021-08-28-16-17-07.png)\n\n* Attraction energy = -A/r and Repulsive energy = B/power(r,n)\n* E0 = Bonding energy at minimum distance. This means that it is the energy required to seperate two atoms.\n* It the curve above is deep, this implies that the material is rigid and inflexible and vice versa.\n* If the double derivative of the energy (equivalent to single derivative of force equation) equation at r = r0 is less than 0 then it is stable and vice versa.\n* To find the equalibrium position, make the single derivative of the energy equation (equivalent to the force equation) equal to 0.\n\n## Ionic Bonding\n* **Difference between electronegativity is of prime importance. Ionic bonding only occurs between atoms with large differences in electronegativity.**\n* Cation = Positive Ion, Anion = Negative Ion\n* Primary Bonding means that electrons are completely transferred. Atoms do so to acheive stable configuration. Such type of bonding is very strong (columbic force in case of ionic bonding). (Eg. Ionic, Covalent and Metallic)\n* Ionic bonds are non-directional whereas covalent bonds are directional in nature.\n* Secondary Bonding means that electrons are shared. This type of bonding is weaker compared to primary bonding. (Eg. inert gases (H2, Cl2) or permanet dipoles (H20, HCl))\n* Enet (due to all attractions and repulsions) is known as **madelung energy**.\n\n## Covalent Bonding\n* **Covalent bonding occurs between atoms with small differences in electronegativity.**\n* Percent of ionic characters:\n\n![](/assets/images/2021-08-28-16-46-57.png)\n\n* Here Xa and Xb are the electronegativities of elements a and b. Greater the difference between electronegativities, greater is the ionic bonding and vice versa.\n\n## Summary of Bonding\n\n![](/assets/images/2021-08-28-16-50-27.png)","url":"https://sameep1234.github.io/notes/notes/3Ez0kXjxHUD43Yc6H2vMR.html","relUrl":"notes/3Ez0kXjxHUD43Yc6H2vMR.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 1","content":"\n# Introduction to Material Science and Engineering\n\n## Points to Ponder\n* With slight change in physical properties, we can get a whole new material. These are **amorphous** and **crystalline**.\n* Difference between LED and solar cell is that one emits the light and other absorbs the light.\n\n## Assessment and Evaluation\n* Mid Sem Exam - 25%\n* End Sem Exam - 30%\n* Lab Work (including viva (15%) and theory exam (10%)) - 25%\n* Project - 10% (Based on ppt presentation and viva)\n* Tests/Quizes - 10% (Two Quiz of 5% each)\n\n## Project Details\n* Submit a report\n* Viva will be conducted\n\n## Course Material\n* Textbook - Materials Science and Engineering: An Introduction, William D Callister 6th Edition, John Wiley & Sons.\n\n> Central Paradign of Material Science and Engineering\n\n![](/assets/images/2021-08-28-10-09-21.png)","url":"https://sameep1234.github.io/notes/notes/Q0Qv4OOrtgWPGOXojo4iy.html","relUrl":"notes/Q0Qv4OOrtgWPGOXojo4iy.html"},{"doc":"Identity and Behaviour","title":"Identity and Behaviour","hpath":"courses.Semester 5.Identity and Behaviour","content":"\n","url":"https://sameep1234.github.io/notes/notes/elcUWYUkVJfjM5NLR8toR.html","relUrl":"notes/elcUWYUkVJfjM5NLR8toR.html"},{"doc":"Lecture 6","title":"Lecture 6","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 6","content":"\n# Piaget's and Theory\n\n## Piaget's Theory\n* It's main principle is that children act on their physical environment by playing and exploring to develop schemes.\n* Schemes are nothing but metal representation of bodily movement of something that a person can do with an object.\n* Example of scheme include cricket bat and watch.\n* Schemes develop through **assimilation and accomodation.**\n* Assimination is the process by which new expeciences are incorporated into existing schemes.\n* Accomodation is the process by which schemes are changed and new experiences are **assimilated.**\n* Example is of a child trying to stack smaller blocks on hollow bigger block.\n* Another example can be of telephone. After multiple iterations a child knows that when a telephone rings, we pick it up and talk. Similar is the case with wireless mobile phones but the range is low in wired case.\n* Thus, identifying the scheme is of prime importance. So, for the telephone example, the scheme is that whenever it rings, someone comes and picks it up.\n* Now, the new experience is of mobile phones. What to do when it rings? This has to be incorported by the child.\n* Operations\n    * Those actions that can be reversed or they are called reversible actions.\n    * Types of operations\n        * Cause and effect - Eg. Switch\n        * Conservation of substance - Eg. Clay\n* Four stages\n    * **Sensorimotor stage** (birth to 2 yrs) \n        * Focus on present object and not on the object that is not there.\n        * They have basic schmes of shaking, twisting, pushing etc. (inbuilt)\n    * **Preoperational stage** (2 to 7 years)\n        * Think about the objects that are not present.\n        * Don't think of reversible consequence of actions.\n        * Use perception rather than logic.\n        * Eg. Water in different shapes of container.\n    * **Concrete-Operational stage** (7 to 11 yrs)\n        * These are tied to their actual experiences.\n        * Eg. Water in bottle to glass\n        * **They are not able to generalise the results to all the types of substances.**\n        * They are not able to think in hypothetical situations.\n    * **Formal-Operational stage** (11 to 16 yrs)\n        * Notice similarites between operations performed on different objects.\n        * **They are able to generalise the results obtained in one situations to other situations.**\n        * They can now think in hypothetical world.\n        * Eg. How much air does a room contain? It is the volume of the room.\n\n## Vigotsky's Theory\n* Its main principle is that children develop in the social world by interacting with other people and products of their cultural history.\n* Eg. Child born in a tribe and in a modern family.\n    * The difference between learning language in modern family and that in tribe would be of written documentation.\n    * Tribe people might not have a written manuscript of the symbols and language that they use whereas modern family have perfectly well maintained documentation of the rules and regulations of their language.\n    * Thus, a child in tribe might learn about only the spoken part and not the written part whearas in modern family, a child learns both.\n* Social elements\n    * Symbols\n    * Knowledge\n    * Ideas\n    * Mode of reasoning\n\n## Difference in perspective of both theories\n* ![](/assets/images/2021-09-12-11-44-22.png)\n* In the above example, from piaget's perspective, the child discovered the rule of commutativity because the child acted on the pebbles (physical environment) and while playing with it.\n* From the vigotsky's perspective, the child belongs to the community where they know how to count or at least that community value counting because of which the child started counting.\n* Otherwise, the child could have done numerous other activities with the pebbles like throwing it, catching it etc.\n* This also means that the community also has some symbols that facilitate counting. Otherwise, how will a child count?","url":"https://sameep1234.github.io/notes/notes/B6LpHilQrXjg9DmV7uSvB.html","relUrl":"notes/B6LpHilQrXjg9DmV7uSvB.html"},{"doc":"Lecture 5","title":"Lecture 5","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 5","content":"\n# Social Learning Theory\n\n## Social Learning Theory\n> Individuals learn by **observing** what happens to other people and just by being told about something as well as through direct experience.\n\n* In layman terms, social learning theory is that we learn by observing others and in turn gaining **experience**.\n* Observational learning is the process of watching others for gaining **experience.**\n* Vicarious Reinforcement - Not necessary for an individual to explicitly behave in order to learn, it is enough to observe others for some actions and their consequences.\n* It is a natural extension of operant conditioning.\n* **It depends on how an individual perceives and defines the consequence.** Eg. Severity of phone confiscation may be different for those who use two phones and those who use only one.\n* **Bobo Doll Experiment is the very good example of social learning.**\n* Processes\n    * Attentional Processes - focusing on critical features.\n    * Retention Processes - How well the individual remembers action of model.\n    * Motor reproduction processes - Converting retained thoughts into action.\n    * Reinforcement processes - Motivation to exhibit modeled behaviour.\n\n## How do children learn?\n* They act on their physical environment.\n* They are like little scientists who experiment on physical environment.\n* Scheme is **what an object does.**","url":"https://sameep1234.github.io/notes/notes/TQIcM1ujpVlbK2juBuF7j.html","relUrl":"notes/TQIcM1ujpVlbK2juBuF7j.html"},{"doc":"Lecture 4","title":"Lecture 4","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 4","content":"\n# Learning and related theories\n\n## Learning\n> Any **relative permanent** change in **behaviour** that occurs as a result of **experience**.\n\n* Relatively Permanent - This does not mean that the time frame should be large. It could be short but it has to be relatively larger than the past conversation.\n* Change in behaviour - Obvious reasons. Observable actions. There could be many types of behaviour including learned and reflexive behaviour.\n* Experience - When you pay attention or focus on a particular conversation or an event, then that convsersation or event becomes the part of **your experience.**\n    * This means that we are involving sensory organs and hence it becomes a part of an experience.\n\n## Theories\n* Classical Conditioning\n    > It is a **learning process** through which we **create new reflexes.**\n\n    * Unconditioned Stimulus - Something that is already there in the environment.\n    * Unconditioned Response - Reflexive behaviour.\n    * Conditioned Stimulus - Something which is not part of the environment or an event that occurs multiple times.\n    * Conditioned Response - Learned behaviour.\n* Operant Conditioning\n    > **Behaviour** is a **function of consequences**. We do something to **get something** or to **avoid something.**\n\n    * If the consequences are positive, you repeat that activity and vice versa.\n    * We call it **operant** because we operate on the world. We are not doing it automatically or reflexively. We **consciously think** about it.","url":"https://sameep1234.github.io/notes/notes/szlLre7r2Pydsp5oUAWgR.html","relUrl":"notes/szlLre7r2Pydsp5oUAWgR.html"},{"doc":"Lecture 3","title":"Lecture 3","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 3","content":"\n# Organization-Behaviourist Model\n\n## Extra Points\n* Structuralist - Ask **\"What\"** questions.\n* Functionalist - Ask **\"Why\"** questions.\n* Behaviourist - Ask questions about **observable actions.**. Here we observe actions, experiment on them and then come up with a conclusion.\n\n## Organizational Behaviour Model\n![](/assets/images/2021-09-05-20-02-18.png)\n\n> Organizational Behavior - Field of study that investigates the impact that individuals, groups and structure have on behaviour within organizations for the purpose of applying such knowledge toward improving an organization's effectiveness.\n\n* Fundamental objective of OB Model is to enhance the performance and output of the organization.\n* Organization is consciously coordinated social unit, composed of two or more people that functions on a relatively continuous basis to achieve a common goal or set of goals.\n* In simple terms, it is a group of people who work to achieve a goal in a planned manner and with proper and effective (i.e relatively continuos) communication.\n* Manager is someone who gets the things done through other people in the organization.","url":"https://sameep1234.github.io/notes/notes/9Y3IEASF5dMZubw45jWMK.html","relUrl":"notes/9Y3IEASF5dMZubw45jWMK.html"},{"doc":"Lecture 2","title":"Lecture 2","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 2","content":"\n# Schools of Psychology (Cont.)\n\n## Functionalism\n* Mind and behaviour are adaptive.\n* This means that mind and behaviour are not static. They go hand in hand.\n* Functionalist study mental feats like learning, memory and problem solving.\n* Issue\n    * No scientific method to determine the role of mind (Consciousness of mind).\n    * Can't be called scientific because it can't be generalised. It varies from individual to individual.\n    * Furthermore, it is not observed and experiemented and hence it is other reason for it not being scientific.\n\n## Behaviourlism\n* Not focus on mind, see only the behaviour i.e the observable actions.\n* We can't see what's on the mind, behaviour is the only thing that can be observed.\n* Eg. Dog video with bell and food. Dog associates whenever bell is rung, food will come and hence dog starts salivating on seeing bell even when there was no food around.\n* Three characteristics to keep in mind\n    * Complex behaviour comes from elementary behaviour that we have learnt from the birth.\n    * Focus only on learned behaviour. Disregard any behaviour that the child may have born with.\n    * Human's behaviour is no different that that of an animal.\n\n## Gestalt Psychology\n* Structuralists are wrong.\n* The mind is not made of elements, but it is one as a whole.\n* It works as a whole by identifying certain relationships and patterns.\n    * Objects perceived inthe simplest form.\n    * Humans naturally follow lines or curves.\n    * Mind will attempt to fill in the detail that it not there.\n        * Eg. Below images\n            * ![](/assets/images/2021-09-05-19-13-45.png)\n            * ![](/assets/images/2021-09-05-19-13-58.png)\n* Principles\n    * Emergence - Look for some patterns\n    * Multistability - Two or more figures in the same image.\n    * Reification - Eg. Above cube which is not there but we are able to see it.\n    * Invariance - Images that appear symmetrical but is not proven. We **assume** that they are symmetrical.\n    * Closure\n    * Similarity\n    * Proxitmity\n    * Continuity\n    * ![](/assets/images/2021-09-05-19-16-48.png)\n\n## Johari Window\n> Principle - If you are aware about yourself and this information is public/made available to the general public, they your chances of success and happiness increases.\n\n* It is based on the fact of awareness of inner being and openness to share information with others.\n* Two elements of Johari window\n    * Individual and others\n    * Known and unknown information\n* This makes four quadrant.\n    * First - Information that I as well as others are aware about. It is also called as **arena.**\n    * Second - Information that I am not aware but others are. It is also called **blind spot.**\n    * Third - Information that I am aware but other are not. It is also called as **facade**\n    * Fourth - Information that I as well as others are not aware about. It is also called **unknown/dark.**\n* Objective of Johari Window\n    * Increase the area in **arena** which means the open area/free self\n* We can disclose the information that we know and others don't to increase arena.\n* As for the information that others know but we don't, we take the feedback and increase arena.\n* These include behaviour, attitude, feelings, knowledge, experience and skills at an individual level.\n* For the organization, arena is very small and to increase this area, we need to open up to the team assigned. We should also be ready to seek feedback. Furthermore other members should not feel that they are being judged.\n* To reduce the fourth quadrant, we need to have as many diverse experiences as possible at individual level. At manager level, we can conduct various kinds of interesting activiteis where other members open up. We must provide new opportunities for others to gain diverse experiences.","url":"https://sameep1234.github.io/notes/notes/kQIm7GnfuKr6FIaXPYX21.html","relUrl":"notes/kQIm7GnfuKr6FIaXPYX21.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 1","content":"\n# Introduction to IDTB\n\n## Evaluation Scheme\n* Four Quizes: 20% (Each 5%)\n* Assignments\n* Class Participation: 25%\n* Mid Semester Exam\n* End Semester Exam\n\n> **No plagiarism**\n\n## Psychology\n* Science of behavior and mind.\n* Behavior is the action that can be observed.\n* Difference between emotions/feelings and behavior is that emotions/feelings can't be seen.\n* Mind is anything that lies in the consious and unconsious part.\n* Unconsious knowledge are something that are stored in mind and helps in organizing and reacting to the information.\n* Science is process of gaining knowledge through observation and experimentation.\n\n## Schools of Pyschology\n* Structuralism\n    * Break mind to its constituent elements.\n    * Constituent Elements\n        * Sensations\n        * Images\n        * Emotion/Feelings etc.\n    * Method to break mind into its constituents, we use introspection.\n    * Introspection means objective description. Make sure not to list its functions, meantion the **objective description.**\n    * Issue\n        * Does not tell the functions of mind.\n        * Just breaks down into its constituent elements and then what?","url":"https://sameep1234.github.io/notes/notes/D9wwwfHBU8FZT1kN8UJVO.html","relUrl":"notes/D9wwwfHBU8FZT1kN8UJVO.html"},{"doc":"Heritage Conservation","title":"Heritage Conservation","hpath":"courses.Semester 5.Heritage Conservation","content":"\n","url":"https://sameep1234.github.io/notes/notes/znYlAnqQDCB58XxxMMdIl.html","relUrl":"notes/znYlAnqQDCB58XxxMMdIl.html"},{"doc":"Lecture 7","title":"Lecture 7","hpath":"courses.Semester 5.Heritage Conservation.Lecture 7","content":"\n# Ceramic and Intro to Wood\n\n## Firing stages of clay\n* First firing is called bisquing and second firing is called glazing.\n* There are two types of water molecules that are bonded with clay viz physically bonded water and chemically bonded water.\n* During bone dry stage of clay, the physically bonded water is released.\n* Now to remove, chemically bonded water, we fire the clay. This immense heating causing chemically binded water to detach from the clay making it very hard.\n* **Note that the temperature when firing the clay should be raised slowly and not drastically.**\n* This is because clay is porous and when firing, chemically bonded water will try to escape. Now, if suddenly the temperature is raised then the chemically bonded water will not escape suddenly.\n* Instead, the silica fuses into one another trapping the chemically bonded water.\n* Now, at high temperatures, these chemically bonded water turns into steam creating air bubbles.\n* As a result, the clay will disintegrate immediately. Same applies for cooling too. You have to cool the clay very slowly.\n\n## Colors of material at different temperature\n* ![](/assets/images/2021-09-12-09-26-10.png)\n\n## Quartz Inversion Temperature\n* ![](/assets/images/2021-09-12-09-26-43.png)\n* Quartz is silicon dioxide (SiO2) and has a trigonal crystalline structure called as alpha-quartz.\n* At 573 degrees it gets converted into beta-quartz which is hexagonal in shape.\n* So now, it holds clay at 6 points unlike earlier where it holded clay at only 3 points.\n* Now, because of this beta-quartz, the properties of silica change and thus, becomes impervious to water damage.\n* Now, if we cool the clay as soon as it reached 573 degrees, only some part of clay will get converted and majority will disintegrate as soon as it comes in contact of water.\n* Therfore, it is of vital importance that we keep the clay at least equal to 573 degrees for about 2-3 hrs. It depends on how big is the pot.\n* Finally, after quartz inversion takes place, clay turns into ceramics.\n\n## Sintering\n* This is the next phase of clay firing starting at 900 degrees.\n* ![](/assets/images/2021-09-12-09-33-49.png)\n* **After this phase, the water will be retained because of fusion of clay particles.**\n* Pores get removed due to exertion of pressure on each silica particle.\n* This process is called **solid phase sintering.**\n\n## Vitrification\n* ![](/assets/images/2021-09-12-09-41-09.png)\n* After solid phase sintering, there might be some pores that are still left which may allow water to pass.\n* Thus, this next phase is crucial to cover all the pores.\n* In order to lower the melting point of silica, flux is added.\n* Flux is **glassy** in nature. In fact, vitri means glass case.\n* Flux are oxides of metals like calcium, sodian, magnesium, lead, potassion, manganese etc.\n* Now, these oxides (in power form) melt at 1600 degrees and form a liquid.\n* This liquid flows into the pores and solidifies there making the clay fully impervious.\n* This process is called **liquid phase sintering.**\n* **Here, note that silica particles are not melting. It is the flux that is melting.**\n\n## Glazing\n* ![](/assets/images/2021-09-12-09-52-17.png)\n* It beautifies clay by giving it a feel of glass.\n* **Vitreous means glassy.**\n\n## Summary of stages of clay\n* Quartz inversion\n* Solid phase sintering\n* Liquid phase sintering (vitrification).\n* This turns clay to ceramics.\n* Glaze\n\n## Extra Points\n* Melting point of silica = 2000 degress.\n\n---\n\n## Wood\n* This is an organic material and is found in nature.\n* Made from cellulose and bio-organisms can decay these materials.\n* Carving would be easier on wood rather than that on stone because wood is way more softer than stone.\n* Wood is higly porous.\n\n## Surfaces of wood\n* Inlay\n    * Insertion of stone by making a fine cut in the wood.\n* Paint\n* Varnish\n* Gilded\n    * Gold leaf is applied with plaster like substance (to provide adhesiveness to gold leaf) to give wood a appearance of metal.\n* Lacquer\n    * Dip the material in lac which develop aesthetic cracks.\n\n## Important timbers\n* ![](/assets/images/2021-09-12-10-10-01.png)\n\n## Types of wood\n* ![](/assets/images/2021-09-12-10-10-47.png)\n* ![](/assets/images/2021-09-12-10-11-49.png)\n\n## Components of wood\n* ![](/assets/images/2021-09-12-10-12-21.png)\n* If all the water is lost from the wood, then the wood would shrink and vice versa.\n* The exansion and contraction takes place in wood to a great extent. This is because wood is made of cellulose.\n* This changes the shape of wood and this process if called warping of wood.\n* Polysaccharides gives wood its woody appearance. They are just mixture of sugar.\n* Hemicellulose is branched chain and cellulose is composed of mixture of unbranched chain. Former is a mixture of sugar whereas latter is the mixture of glucose.\n* Lignin acts as a binding agent and gives wood its hardness and softness. This means that if lignin is less than bonding is less and vice versa.\n* **Phenol is aromatic alcohol.**","url":"https://sameep1234.github.io/notes/notes/23Nk3sEft5RRlwE3vcrx4.html","relUrl":"notes/23Nk3sEft5RRlwE3vcrx4.html"},{"doc":"Lecture 6","title":"Lecture 6","hpath":"courses.Semester 5.Heritage Conservation.Lecture 6","content":"\n# Steel and Ceramics\n\n## Stainless Steel\n* ![](/assets/images/2021-09-11-10-25-39.png)\n* Chromium oxide layer is impervious layer. This means that chromium layer is non-porous.\n* If there is a small scratch in steel objects, then the chromium oxide layer is ripped off and the inner (iron) metal is exposed.\n* This is the place where you may see corrosion in steel objects.\n* Bidriware\n    * ![](/assets/images/2021-09-11-10-31-28.png)\n    * Made using zinc, copper and silver.\n    * Zinc and silver provide silvery appearance and copper provides a bit of yellow appearance.\n    * This black layer appears because of alloy of zinc and copper. Silver is very low in quantity.\n    * First zinc and copper is melted and then the object is dipped in copper sulphate solution to obtain a blackish color.\n    * This black is temporary.\n    * Now, with metallic stylus, designs are engraved. It is a very sharp metallic point/tool.\n    * Then, they take silver wire and hammer it in those grooves and thus this silver design is made. This is called silver inlay.\n    * Now, to smoothen the surface, it is polished. With regorous polishing, all the temporary black goes away and the entire silvery surface turns white.\n    * In final preparation, **mud of bidar** + water + dilute ammonium chloride and a dough is made and then you rub this object.\n    * By doing this, all the zinc area becomes permanent black.\n    * Silver does not become black because silver is less reactive then zinc and hence does not get converted to black color.\n    * **Silver only reacts with sulphide. This is chloride.**\n\n## Ceramics\n> Made of clay. It is neither metallic nor organic. Clay is the final product of weathering of rock.\n\n* Clay is basically silica and alumina. (SiO2 and Al2O3).\n* When you introduce water, clay becomes really soft and it disintegrates easily.\n* To overcome this problem, we heat the clay at very high temperature and as a result, it becomes very hard and dense.\n* So basically, on heating we are removing water and hence it looses its plasticity.\n* Terracotta army\n    * ![](/assets/images/2021-09-11-11-02-41.png)\n    * Terra means earth\n    * Terracota is basically fired clay.\n    * Brick is made of terracota.\n* BASIC Materials\n* Stucco is made from unbaked clay or sunbaked clay. It is not fired but is sunbaked and hence becomes crucial to study.\n* It is majorly found in Gandhara, Afghanistan.\n\n## Types of clay\n* ![](/assets/images/2021-09-11-11-15-46.png)\n* Terracota comes under erathenware. It gets red color due to inclusion of iron.\n* Bone china is a type of porcelain and fired at 1350 degrees and is mostly white in color.\n* White colored clay called kaolin is used to make bone china.\n\n## Stages of clay\n* ![](/assets/images/2021-09-11-11-18-04.png)\n* Bisuqe is also called as bicuit firing and is the first firing stage.\n\n## Extra Points\n* When you keep on heating/firing any material, the ultimate color it will emit will always be white.\n* This happens because of the stages of heating. In the first stage, the carbon layer is burnt and is black in color.\n* Now on further increasing the temperature, you will see orange color and then becomes red and then it becomes ash colored (grey) and finally becomes white.","url":"https://sameep1234.github.io/notes/notes/OqrxWlMNLaoyohB8eLFQc.html","relUrl":"notes/OqrxWlMNLaoyohB8eLFQc.html"},{"doc":"Lecture 5","title":"Lecture 5","hpath":"courses.Semester 5.Heritage Conservation.Lecture 5","content":"\n# Patina and Metal Oxide\n\n## Patina Continued.\n* Any layer that is formed on the metal surface is called patina.\n* Layers\n    * Oxide\n    * Carbonate\n    * Sulphate\n    * Acetate\n    * Chloride\n* Those patina which is protective in nature is called noble patina and those that are corrosive in nature are called malignant patina.\n* Cuprous oxide (Brown) and cupric oxide (Black) is noble patina as they do not react and protect copper metal.\n* Greenish layer deposited on copper is carbonate layer.\n    * It is also known as malachite.\n    * **Noble patina** but in very rare cases it is malignant patina.\n* **Malignant Patina (Bronze Disease)**\n    * Bronze metals form chloride layer (atacamite and nantokite).\n    * ![](/assets/images/2021-09-11-00-05-28.png)\n      ![](/assets/images/2021-09-11-00-06-37.png)\n\n## Malachite and Azurite formation\n* ![](/assets/images/2021-09-10-23-50-53.png)\n* Two forms of carbonate layer.\n* Carbonate ions are formed when carbon dioxide is dissoved in water.\n* We may also get carbonic acid in a similar fashion.\n* On scratching a corroded metal, we get pure metal inside it. Now that in turn acts as anode and the corroded layer acts as cathode.\n* Then follow the above figure.\n* Oxidation number is the charge an element has in a compound/molecule.\n\n> If in the environment, if you have a lot of CO2, then what will you get? (Azurite or Malachite)\n* We will get azurite as in more CO2 concentrated areas, it is a stable carbonate layer.\n\n## Iron Oxide\n* Nature of Fe2O3 is unstable (doubtfull) and porous\n* This is malignant patina.\n* Because of its porosity, the inner core of the metal is always exposed and hence is called malignant patina.\n* **Startling fact**\n    * Qutub Minar is made of iron.\n    * Built about 1500-1600 years back.\n    * But still, there is no rusting.\n    * **In iron, a little bit of phosphorous is mixed and it forms a complex layer by reacting with hydrogen and oxygen.**\n    * Hence, the iron pillar does not get corroded.\n    * Now, phosphorous and sulphur have tendency to crack any metal (even iron) if it remains inside that metal.\n    * Hence, when iron is heated to 1500 degrees, phosphorous and sulphur escape and iron is protected.\n    * Then, with continuous hammering, the remaining phosphorous comes out on the surface of the metal and hence forms a protective layer.\n    * To make the pillar, a little bit of zinc was also added in the bottom/base of the pillar.\n    * Zinc acts as a **sacrificial anode.**\n    * This means that zinc will corrode and protect iron.","url":"https://sameep1234.github.io/notes/notes/kQJZWSni3yjQIC1ppn94F.html","relUrl":"notes/kQJZWSni3yjQIC1ppn94F.html"},{"doc":"Lecture 4","title":"Lecture 4","hpath":"courses.Semester 5.Heritage Conservation.Lecture 4","content":"\n# Electrochemical series and more on metals\n\n* It is the disordered state that is stable state and ordered state is the active one.\n* This is because, you put some energy in the disordered state to make it in order.\n* Every metal, from the moment extraction is done, it wants to go to its ore form.\n* When a metal is corroded, rust hinders the property of metal. Thus, we can say that the non-metallic quality of metal increases.\n* **Magnetic effect** is used to detect how much **core metal** is left and how much **rust** is formed.\n\n## Electrochemical Series\n* ![](/assets/images/2021-09-10-22-24-30.png)\n* The metals here are placed according to their decreasing reactivity. Hence, going down the electrochemical series, the reactivity will decrease.\n* Thus, gold is the least reactive metal and hence it is sometimes also called as noble metal.\n* It basically does not react with anything. It only dissolves in aqua regia.\n* Pure copper does not rust/corrode easily and hence they are used for electrical installations. Another reason for that use is that it is an excellent conductor of electrivity.\n* ![](/assets/images/2021-09-10-22-29-17.png)\n* Oxidation \n    * When a metal looses electron. \n    * The power to loose electron is called oxidation potential.\n    * Lesser reactive metals have lower oxidation potential than more reactive metals.\n* Reduction\n    * When a metal gains electron.\n    * The power to gain electron is called reduction potential.\n    * Lesser reactive metals have higher reduction potential than more reactive metals.\n* Reducing agent is a more reactive metal that displaces a metal from its sulfate state and vice versa.\n* In metallic terms, oxidation is also called corrosion.\n\n## Galvanic Cell\n* Also known as Voltaic cell or Daniel cell or Electrochemical cell\n* ![](/assets/images/2021-09-10-22-39-33.png)\n* Electrode is a solid electrical conductor that carries a current. Two types include anode and cathode.\n* Zinc acts as anode and copper acts as cathode.\n* Electrolyte (Salt Bridge) is of vital importance as it completes the circuit for current to flow.\n* Now once the circuit is complete and current starts flowing, zinc begins to loose electrons.\n* This is because, copper has more reducing potential and as a result has a greater power to pull the electrons.\n* So in time, Zinc gets converted to zinc sulfate and copper sulfate gets converted to pure copper.\n* **To summarize, less reactive metal will get deposited and more reactive metal will get used up during electrolisis.**\n* Thus, to preserve a less reactive metal, just bring a more reactive metal in contact with the less reactive metal. This process is called anodic preferential corrosion or anodic sacrificial protection.\n* Similarly, if a more reactive metal is to be protected than we coat that metal with a less reactive metal and this process is called cathodic protection. (Used mainly for protecting silver by coating gold on it).\n\n## Tarnising of silver\n* Silver is almost a noble metal and hence it is very difficult for it to corrode.\n* ![](/assets/images/2021-09-10-22-53-23.png)\n* Color is black.\n* Oxygen can not harm silver but sulfur can.\n* Only on the surface.\n* We preserve tarnished silver to preserve silver and it also represent age and authenticity in silver artifacts.\n* Patina is just a layer and surface discoloration. It is a surface phenomena.\n* Silver sulfide layer is called as noble patina because it is non reactive.\n* Oxide layer on broze is blackish in color or called as blackish patina.\n* Cuprous oxide layer is brownish in color and later it will change to cupric oxide which is more stable and is blackish in color.\n\n## Types of oxide\n* Unstable metal oxide - Gold, Silver and Platinum\n* Stable metal oxide - Copper, Tin and Lead\n* Volatile metal oxide - Molebdenum\n* Porous metal oxide - Sodium, Potassium, Manganese and iron.","url":"https://sameep1234.github.io/notes/notes/DlzcvZviOp3RT0nNEbRwb.html","relUrl":"notes/DlzcvZviOp3RT0nNEbRwb.html"},{"doc":"Lecture 3","title":"Lecture 3","hpath":"courses.Semester 5.Heritage Conservation.Lecture 3","content":"\n# Hardness of Stones and Introduction to metals\n\n## Mohs Hardness Scale\n* ![](/assets/images/2021-09-10-14-42-38.png)\n* Gypsum\n    * Used as one of the raw components of cement and its called calcium sulphate.\n    * It is really soft.\n* Calcite\n    * Chief component of limestone and marble.\n    * It is called Calcium Carbonate\n* Quartz\n    * It is very hard.\n    * Used in sandstone and granite\n    * Hence, these materials are also hard.\n    * It is called silicon dioxide.\n    * Harder than Gypsum and Calcite as evident from the above figure.\n    * Artifacts of sandstone have different colors like shown in below image.\n        * ![](/assets/images/2021-09-10-17-05-34.png)\n    * This means that if **iron content** is more, then it **gives red** color and if **clay content** is more, then it **gives yellow** color.\n    * The red color of the red fort is red because of ferruginous sandstone. This iron gets rusted and gives red color.\n    * The yellow colored sandstone is called as argilesious sandstone.\n\n## Use of stones in monuments\n* Humanyun's Tomb, Delhi\n    * ![](/assets/images/2021-09-10-17-09-03.png)\n    * Made using sandstone (red colored) and marble (white colored).\n* Taj Mahal, Agra\n    * ![](/assets/images/2021-09-10-17-10-02.png)\n    * Again made using sandstone (main platform) and brick and marble (outer/external padding).\n    * Iron slabs/rod are used to padd marble and hence we can see some rusting where iron is inserted.\n\n* **Note: Sandstone is always at base and marble is at top. Marble is a porous stone.**\n\n    > Why is it not the reverse?\n    * This is because, sandstone is a stronger than marble and hence has the capacity to hold the weight of marble.\n* Biwi ka maqbara, Aurangabad\n    * ![](/assets/images/2021-09-10-17-16-57.png)\n    * Made using a very fine and polished limestone and only 25% marble is used.\n\n## Extra Points\n* Average temperature of venus is 470 degrees.\n* Mars surface temperature is -53 degrees.\n* Earth's surface temperature earlier was 290 degrees and nowadays it is 15 degrees.\n    > What was the climatic condition that led it to cool down?\n    * It was covered with Carbon Dioxide, but during formation of limestone, more than 80% of the gas was consumed and thus, the earth's surface temperature cooled.\n* During the production of cement, we are reversing the formation of limestone.\n* Thus, we are releasing a lot of carbon dioxide.\n* Stones used in formation of qutub minar are marble, sandstone and **quartzite.**\n* Based on quartizite, Alai Minar in Delhi was made. Originally, it was supposed to be a replica of Qutub Minar with double height, but could not be completed.\n* Kailashnath Temple, Ellora is made using Basalt which is extrunious igneous rock formed by volcanic rocks.\n* Brihadishwar Temple, Tanjavur is made using granite.\n* **Anything that has to migrate from one surface to other surface, the other surface must be more porous compared to the first one.**\n\n# Metals\n* Most of the metals are subject to corrosion due to atmospheric moisture.\n* Metals used in heritage\n    * ![](/assets/images/2021-09-10-17-37-31.png)\n    * These metals are placed in the order of their corrsion resistance and hardness.\n    * **There is a mistake in the photo. Zinc is more corrosive than iron. Hence swap these two.**\n* Alloys used in heritage\n    * ![](/assets/images/2021-09-10-17-39-29.png)\n    * First coin was prepared from electrum. It is also called green gold if available naturally, but artificially made electrum is called white gold because some amount of palladium.\n    * Brass will corrode first as compared to bronze because it has amounts of zinc.\n    * Broze is made from 90% copper and 10% tin. Similar is the case for brass but with its respective metals.\n    * Pewter will appear like silver, but that silvery finish is mainly due to tin and little bit of silver.\n\n## Extra Points\n* Iron is more abundant than copper in earth's crust.\n* But still copper age was before iron.\n* This is because, melting point of iron is much more than that of copper and hence, it was difficult to make iron objects.\n* Gold only dissolves in aqua regia only.\n* Some metal occur in natural form and other in ore form.\n* Stable state of any metal is its rust form and the most active when it is extracted from ore.\n* This active state is achieved by supplying energy to extract it from its ore.","url":"https://sameep1234.github.io/notes/notes/TzPyj45VXFMTuEHxTsCOL.html","relUrl":"notes/TzPyj45VXFMTuEHxTsCOL.html"},{"doc":"Lecture 2","title":"Lecture 2","hpath":"courses.Semester 5.Heritage Conservation.Lecture 2","content":"\n# Observing sculptures and studying stones\n\n### Sorry for the inconvinience but please refer this [site](https://unread.parthshah.ml/notes/YmWOd4xszZMV0mLFklxgE.html) for lecture 2 notes.","url":"https://sameep1234.github.io/notes/notes/YwlvzkRsllhMqra5QDYkF.html","relUrl":"notes/YwlvzkRsllhMqra5QDYkF.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Heritage Conservation.Lecture 1","content":"\n# Introduction to Conservation\n\n### Sorry for the inconvinience but please refer this [site](https://unread.parthshah.ml/notes/RS0pMLTtuIC0G6hKGBSil.html) for lecture 1 notes.","url":"https://sameep1234.github.io/notes/notes/SJH5ZSmDfPD1UrQmDVlHq.html","relUrl":"notes/SJH5ZSmDfPD1UrQmDVlHq.html"},{"doc":"Embedded Systems","title":"Embedded Systems","hpath":"courses.Semester 5.Embedded Systems","content":"\n","url":"https://sameep1234.github.io/notes/notes/a1PatlsCiz7PYsL111lFm.html","relUrl":"notes/a1PatlsCiz7PYsL111lFm.html"},{"doc":"Lecture 3","title":"Lecture 3","hpath":"courses.Semester 5.Embedded Systems.Lecture 3","content":"\n# Timer (Cont.)\n\n## Extra Points\n* If prescaling is applied, we multiply the time period of the AVR microcontroller.\n* Time Delay\n    * Hex Value\n        * ![](/assets/images/2021-09-06-11-10-19.png)\n    * Decimal Value\n        * ![](/assets/images/2021-09-06-11-11-09.png)\n* TO clear any flag, write logic **\"1\"** to it.\n\n## Steps for programming\n* ![](/assets/images/2021-09-06-11-23-39.png)\n* ![](/assets/images/2021-09-06-11-32-17.png)\n\n> Question that remains is how to store/measure overflow flag?\n* For that we use TIFR (Timer/Counter Interrupt Flag Register). It has dedicated 1-bit to store every flag that we may encounter.\n\n## TIFR Circuit\n* It is an 8-bit register.\n* Stores flags and **overflow flag is set on 0th bit**.\n* Value \"1\" implies overflowed and vice versa.\n> The below given figure will be provided for reference in exam.\n* ![](/assets/images/2021-09-06-11-37-11.png)\n\n* Prescalers slows down the clock. Hence increases the time period.\n* Thus, multiply the prescaler to clock time period to get the adequate delay.\n* Overflow flag is located on 0th bit. Hence to check overflow we check TIFR & 0x1 to be 0.\n* **Make sure that to reset the flag by putting \"1\" to the flag.**\n* Example questions\n    * ![](/assets/images/2021-09-06-11-40-28.png)\n    * ![](/assets/images/2021-09-06-11-42-27.png)\n    * Toggle bits on 4th Pin of PORTB continuously with delay of 70 microseconds. Use Timer0, normal mode and 1:8 prescaler. Frequency of clock is 8MHz.\n```c\n#include<avr/io.h>\n\nvoid T0Delay() {\n    TCNT0 = 0xBA;\n    TCCR0 = 0x02;\n    while((TIFR & 0x1) == 0);\n    TCCR0 = 0;\n    TIFR = 0x1;\n}\n\nvoid main() {\n\tDDRB = 0x10;\n\twhile(1)\n\t{\n\t\tPORTB = 0x10;\n        T0Delay();\n        PORTB = 0x00;\n        T0Delay();\n\t}\n}\n```\n* Author's method\n    * ![](/assets/images/2021-09-06-12-12-18.png)","url":"https://sameep1234.github.io/notes/notes/OOasCBaTamuJHGHWZybcu.html","relUrl":"notes/OOasCBaTamuJHGHWZybcu.html"},{"doc":"Lecture 2","title":"Lecture 2","hpath":"courses.Semester 5.Embedded Systems.Lecture 2","content":"\n# Timers\n\n## Timers in AVR\n* ![](/assets/images/2021-09-05-10-37-02.png)\n* ATMEGA32\n    * Timer 0: 8-bit\n    * Timer 1: 16-bit\n    * Timer 2: 8 bit\n* Example\n    * ![](/assets/images/2021-09-05-10-48-08.png)\n    * Complex Solution\n    ![](/assets/images/2021-09-05-10-50-57.png)\n\n## Components\n* TCCR: Timer/Counter Control Register\n    * 8-bit register\n    * ![](/assets/images/2021-09-05-11-18-21.png)\n    * When you put 000, timer stops if it is running.\n    * Other information given in the image above.\n* TOV: Timer Overflow\n* TCNT: Timer/Counter Register\n    * 8-bit register that increments count.\n    * It is a read/write register.\n    * Increments every clock cycle\n    * Overflows occur at 0xFF.\n    * ![](/assets/images/2021-09-05-11-02-40.png)\n* OCR: Output Compare Register\n    * It is a read/write 8-bit register.\n    * Continuously compared with counter value.\n    * \n* OCF: Output Compare Flag\n\n## Circuit (Timer 0)\n![](/assets/images/2021-09-05-10-59-49.png)\n","url":"https://sameep1234.github.io/notes/notes/f1JA4Zfw5Wt9QVFQZUokW.html","relUrl":"notes/f1JA4Zfw5Wt9QVFQZUokW.html"},{"doc":"Lecture 2 (Lab)","title":"Lecture 2 (Lab)","hpath":"courses.Semester 5.Embedded Systems.Lecture 2 (Lab)","content":"\n# Coding Program and Examples\n\n## Extra Points\n* Different states of pins\n    * ![](/assets/images/2021-09-05-08-42-05.png)\n* Status of 8-bit Registers\n    * ![](/assets/images/2021-09-05-08-50-10.png)\n* Unpacked BCD\n    * 4 LSB's are used.\n    * 4 MSB's are kept 0.\n    * Eg. 4 = 0000 0100\n* Packed BCD\n    * 4 LSB's = One number\n    * 4 MSB's = Second number\n    * Eg. 24 = 0010 0100","url":"https://sameep1234.github.io/notes/notes/brRGqD7ugSh0VyAsGAETE.html","relUrl":"notes/brRGqD7ugSh0VyAsGAETE.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Embedded Systems.Lecture 1","content":"\n# Introduction to Embedded Systems\n\n## Course Material\n* Text Book - The AVR Microcontroller and Embedded Systems using Assembly and C by Muhammad Ali Mazidi, Sarmad Naimi and Sepehr Naimi.\n\n## Evaluation Scheme\n* End Semester Exam: 30%\n* Mid Semester Exam: 25%\n* Laboratory Experiments: 45%\n* **Relatve Grading**\n\n## Microprocessor\n* Brain of the computer\n* A programmable integrated device that takes input, uses memory and produces output.\n\n> Now in embedded system, we are moving from microprocessor to microcontroller.\n\n* Key difference between them is that microprocessor, you can use multiple chips whereas for microcontroller, you can't use that.\n\n## Extra Points\n* When system performance is critical then use microprocessors\n* When issues of space, power and rapid development are critical then use microcontrollers.\n\n> What is embedded system?\n\n* We are talking about microprocessor and microcontroller.\n* A way of working, organizing or performing one or many tasks according to a fixed set of rules, program or plan is called a **system**.\n* A system that has the following two properties is called an embedded system.\n    * software embedded into a computer hardware.\n    * which makes a system dedicated for an application or specififc part of an application or product or part of a larger system.\n* It is a dedicated purpose software embedded in a computer hardware.\n\n## Classification\n* Stand Alone\n    * Designed to perform a very specific task **reprtitively**.\n    * Non-reactive to the environment conditions.\n    * Simplest form of ES.\n* Real Time\n    * Usually monitors the environment where it is installed.\n    * It is required to respond in time to a request.\n    * Eg. Systems used in AC.\n* Network or Remote Controlled\n    * Can be reactive or non-reactive to its environment.\n    * Built using specialized communication processor.\n    * Eg. Drone\n* Mobile\n    * Designed to be continuously on the move.\n    * Battery Powered\n\n## Components\n* Hardware\n* Software\n    * Higher level programs that can be changed without replacing the hardware.\n* Firmware\n    * They are small and fixed programs and data structures that internally control various electronic devices.\n    * They are very basic low level programs without which a device would not function at all.","url":"https://sameep1234.github.io/notes/notes/wIwPNNBh5jeugRuj1Bhsv.html","relUrl":"notes/wIwPNNBh5jeugRuj1Bhsv.html"},{"doc":"Lecture 2","title":"Lecture 2","hpath":"courses.Semester 5.Embedded Systems.Lecture 1 (Lab)","content":"\n# Selection and Coding\n\n> #### This was the lab session but theory was taught.\n\n## Criteria's to select microcontroller\n* Computational need - Efficiency, cost etc.\n    * 8-bit vs 16-bit vs 32-bit\n    * Speed\n    * Power Consumption\n    * Packaging\n        * Space\n        * Assembling\n        * Prototyping end product\n    * Amount of RAM and ROM on chip\n    * No. of I/O pins\n    * No. of timers\n    * Upgradability to new versions\n    * Cost per unit\n* Availability of software development tools\n    * Availability of\n        * Assemblers\n        * Debugger\n        * COde-efficient C-language compiler\n        * Technical Support\n        * In-house and outside expertise\n* Reliable source of microcontroller\n    * Number of companies supplying controller.\n    * Are they reliable?\n    * Will it support in future?\n\n> We would be using AVR Microcontrollers\n\n## Harvard vs Princeton\n* Harvard\n![](/assets/images/2021-09-04-18-21-51.png)\n* Princeton\n* ![](/assets/images/2021-09-04-18-22-18.png)\n\n## RISC vs CISC\n* CISC\n    * Complex Instruction Set Computing\n    * Single instruction can execute several low-level operations (including load from memory, artihmetic operations and memory store).\n    * Capability of multi-step operations.\n* RISC\n    * Reduced Instruction Set Compution\n    * Low complexity\n        * Speed-up\n        * Less errors in implementation\n    * Less transistors\n    * More space and registers\n* Conclusion\n![](/assets/images/2021-09-04-18-30-30.png)\n\n## AVR Microcontrollers\n* Follows Harvard Architecture\n* Follows RISC architecture with CISC instruction set\n* Full-form - Advanced Virtual RISC\n* 8 Bit Bus (For our application)\n* Pin count between 8 to 100\n* Scalable\n* 32 working registers\n    * All connected to ALU\n* Single Cycle Execution\n    * One instruction per external clock\n    * Low power consumption\n* Efficient core\n* High system level integration\n\n## Extra points\n* ![](/assets/images/2021-09-04-18-37-03.png)\n* For ATMEGA Ports, we have 4 ports each 8 bit.\n* Each pin is configurable\n* Types of configuration\n    * Input with internal pull-up\n    * Input with no pull-up\n    * Output (Driven Low)\n    * Output (Driven High)\n* Each Port will have **3 main registers**\n    * DDRx - Data Direction Register\n        * For configuring data direction (whether input or output)\n    * PORTx - Port output/Driver Register\n        * Output Mode\n    * PINx - Port Input Register\n        * Reading Mode\n\n> **How to give direction?**\n\n* For any Pin, if it is defined 0, then it represents input pin and vice versa.\n\n## Examples of Program\n* ![](/assets/images/2021-09-04-18-45-38.png)\n* ![](/assets/images/2021-09-04-18-48-57.png)","url":"https://sameep1234.github.io/notes/notes/EeN4Bb9OzCECuhZ4gwGLz.html","relUrl":"notes/EeN4Bb9OzCECuhZ4gwGLz.html"},{"doc":"Changelog","title":"Changelog","hpath":"root.changelog","content":"","url":"https://sameep1234.github.io/notes/notes/changelog.html","relUrl":"notes/changelog.html"}]
