[{"doc":"This page has not yet sprouted","title":"This page has not yet sprouted","hpath":"403","content":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","url":"https://sameep1234.github.io/notes/notes\\403.html","relUrl":"notes\\403.html"},{"doc":"Curated Notes","title":"Curated Notes","hpath":"root","content":"\nYou have reached the home page of my curated notes. I am a third year student pursuing Computer Science and Engineering at Ahmedabad University.\n\nFeel free to use this resource to its best potential and reach out to me on [Linkedin](https://www.linkedin.com/in/sameep-vani/) and do checkout my [GitHub](https://github.com/Sameep1234)","url":"https://sameep1234.github.io/notes","relUrl":"/"},{"doc":"Courses","title":"Courses","hpath":"courses","content":"\n","url":"https://sameep1234.github.io/notes/notes\\Jq5ki9jf1QLTdc3DYLRW4.html","relUrl":"notes\\Jq5ki9jf1QLTdc3DYLRW4.html"},{"doc":"Semester 5","title":"Semester 5","hpath":"courses.Semester 5","content":"\n","url":"https://sameep1234.github.io/notes/notes\\O93aKwUCEnkxTR7S8V2eZ.html","relUrl":"notes\\O93aKwUCEnkxTR7S8V2eZ.html"},{"doc":"Sensors","title":"Sensors","hpath":"courses.Semester 5.Sensors","content":"\n","url":"https://sameep1234.github.io/notes/notes\\BU8smu6Xa4e3tkB0iVHT9.html","relUrl":"notes\\BU8smu6Xa4e3tkB0iVHT9.html"},{"doc":"Lecture 3","title":"Lecture 3","hpath":"courses.Semester 5.Sensors.Lecture 3","content":"\n### Points\n* With one value of x, take many values of y and then take the average\n* Error can occur at input as well as output side\n### Standard Error and Standard Deviation\n> Measures how much discrepancy (difference) is likely to be in the sample mean and the population mean.\n\n* Std Dev = Spread of data around the mean\n\n![](/assets/images/2021-08-27-09-42-54.png)\n* In excel, multiply by sqrt(nx) and divide by sqrt(nx-1) to get the correct result\n![](/assets/images/2021-08-27-09-44-23.png)\n### Precision\n> Degree of reproducibility of a measurement\n\n* Accuracy and precision are different. **Outputs** for calculation is close enough then your calculation is precise but accuracy depends on the whether the output values are close to the actual value means it is accurate.\n* It is also possible that the output is more accurate and less precice and vice versa.\n### Resolution\n> Smallest measurable increment\n\n* Eg. Resolution of 1mv is greater than that of 10mv.\n* But it also depends on the type of application. If 100mv is the measurement required then 10mv is a nice resolution and 1mv resolution will be redundant\n### Span and Range\n> Span: Linear operating range\n\n* This means that the relationship between two values must be a linear relation.\n> Range: Simple range (No explanation needed)\n\n### Best Fit Line\n![](/assets/images/2021-08-27-10-03-26.png)\n* Error is the difference between best fit value and the actual value.\n![](/assets/images/2021-08-27-10-09-13.png)\n> We take n-2 because measured values are mean and not true values and two variables are involved.\n\n## Computerized measurement and control systems\n### Development of software\n> Question to think: How to store the software or computer program in the circuit board?\n\n* General purpose computer is required to build a software for specific purpose computer.\n### Arduino Board\n* Components\n    * Input Pins (6 Analog Pins)\n    * Battery Connector/Receptor\n    * Output Pins (Analog)\n#  **Some part left**","url":"https://sameep1234.github.io/notes/notes\\YDNkGBLoHbT3jeeS0tRMf.html","relUrl":"notes\\YDNkGBLoHbT3jeeS0tRMf.html"},{"doc":"Lecture 2","title":"Lecture 2","hpath":"courses.Semester 5.Sensors.Lecture 2","content":"\n","url":"https://sameep1234.github.io/notes/notes\\ECJbtlwQWOE3dFIna0Lm3.html","relUrl":"notes\\ECJbtlwQWOE3dFIna0Lm3.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Sensors.Lecture 1","content":"\n","url":"https://sameep1234.github.io/notes/notes\\yTD0dP4MoWNKpCeht3Wz3.html","relUrl":"notes\\yTD0dP4MoWNKpCeht3Wz3.html"},{"doc":"Operating System","title":"Operating System","hpath":"courses.Semester 5.Operating System","content":"\n","url":"https://sameep1234.github.io/notes/notes\\OGq6U8MXIG3wwETNLR4b6.html","relUrl":"notes\\OGq6U8MXIG3wwETNLR4b6.html"},{"doc":"Lecture 3","title":"Lecture 3","hpath":"courses.Semester 5.Operating System.Lecture 3","content":"\r\n# System Calls and Architecture of UNIX\r\n\r\n## Intro to system calls\r\n* System calls is the most important and crucial concept in OS. It is basically a link connecting user to the OS.\r\n* Formally, it is aprogramming interface to use the services provided by the OS. They are the programs that help give access to the functionalities provided by the OS.\r\n*  They are written in a high-level language like C or C++.\r\n* POSIX API is used in Linux and Win32 API is used in windows.\r\n\r\n## Implementation of System Call\r\n* Associated with each system call.\r\n* Every OS have a list of system call along with ID's.\r\n* System call interface maintains a table with ID's as indices.\r\n* This interface invokes a particular system call in OS kernel and returns the status and return values if any.\r\n* Details are hidden from programmer by API.\r\n\r\n## Relationship between API, System Call and OS\r\n\r\n![](/assets/images/2021-08-29-10-48-06.png)\r\n\r\n## Types of system calls\r\n* File Management - Eg. create, open, close etc.\r\n* Device Management - request, release, read, write etc.\r\n* Protection - control access, get and set permissions etc.\r\n* Information maintenance - get time, set process etc.\r\n* Communications - create, delete communication, send or recieve messages etc.\r\n\r\n### Architecture of UNIX\r\n\r\n* ![](/assets/images/2021-08-29-11-08-15.png)\r\n\r\n* Linux is based on UNIX but is more complicated than UNIX.\r\n* UNIX system follows monolithic approach\r\n* UNIX System Kernel\r\n\r\n![](/assets/images/2021-08-29-11-10-53.png)\r\n\r\n* **In Linux or UNIX, everything is in terms of files. Thus, it becomes crucial to understand file system.**\r\n","url":"https://sameep1234.github.io/notes/notes\\Oj3uiXKth6ZgUASqln4Vi.html","relUrl":"notes\\Oj3uiXKth6ZgUASqln4Vi.html"},{"doc":"Lecture 2","title":"Lecture 2","hpath":"courses.Semester 5.Operating System.Lecture 2","content":"\n# Evolution, Kernel and System Calls\n\n## Evolution of OS\n* Serial Processing\n* Simple Batch Systems\n* Multiprogrammed Batch Systems\n* Time Sharing Systems\n* many others\n\n## Serial Processing\n* There was no OS\n* To run the program, we would have to type a command for everything.\n* Job is a set of instructions along with the data on which the instructions need to be executed\n* Issues\n    * Scheduling\n        * Fixed amount of time\n        * Conflict between instructions requiring more or less time.\n    * Setup Time\n        * Loading of compiler and program is time consuming\n\n## Simple Batch System\n* Monitor Program were used which were kind of OS - A very rudimentary OS\n* It is a software that controls the sequence of events\n* No direct access to users unlike Serial Processing\n* Job is submitted to an operator who batches similar instructions together and places them on the input device/hardware.\n* In this way, the time consumed is averaged out and the processor can be utilized to its maximum.\n* Control is given back to monitor after program gets terminated\n\n> Monitor controls the sequence of events. Resident monitor is softwware always in memory. It reads in job and gives control. Job in turn returns the control back to monitor\n\n> Processor executes instructions from the memory i.e monitor. Then user programs are executed. Gains control from monitor to execute the task and once completed returns the control to monitor.\n\n> JCL (Job control language) - Programming language provides instruction to the monitor about the compiler and data to be used\n\n* Modes of operation\n    * User mode - Programs submitted by the user to the memory are executed in this mode. **Not all instructions may be executed** (Normal Mode)\n    * Kernal mode - Part of a modern OS that actually performs I/O Management, Process Management etc. Nowadays, we have many other utility programs running which are a part of OS, but kernal is the most important one which manages the above mentioned things. (Admin Mode\n    )\n\n* Issues\n    * Processor remains idle\n    * Slow compared to processor even with automatic job sequence.\n\n![](/assets/images/2021-08-28-23-38-27.png)\n\n## Uniprogramming\n\n> Processor must wait for I/O instruction to complete before proceeding further.\n\n## Multiprogramming\n\n> Opposite of uniprogramming. Still there will be some waiting time but at least it can be reduced and hence is better than uniprogramming.\n\n## Time sharing systems\n* The program is being shared through different users and different monitors. Thus, can be used to handle multiple interactive jobs.\n* Processor time is shared among multiple users.\n* This time is in milli or micro seconds. This is called short burst or quantum of computation.\n\n![](/assets/images/2021-08-29-00-06-36.png)\n\n## OS Structure\n* For general purpose OS, the program is very large.\n* Ways to structure OS\n    * Monolitic Approach - Everything combined in one place.\n        * Eg. Older LINUX and UNIX\n        * Advantages\n            * Speed as everything is connected\n            * Performance\n        * Disadvantages\n            * Difficult to maintain and modify\n    * Layered Approach - OS divided into number of layers.\n        * Layer 0 = hardware and Layer n = user interface layer\n        * Layer used functions and services of **only lower-level layers**\n        * Eg. Older windows versions\n    * Microkernels - Move as much functionalities as possible to user mode. \n        * Unlike that in layered and monolithic where majority of the functionalities is available in only kernal mode.\n        * I\\O and interrupt management, primitive memory management, inter-process communication and basic scheduling were kept in kernel mode.\n        * All other functionalities will be running in user mode.\n        * Advantages\n            * Time is reduced significantly as the time to change the mode from user to kernel and vice versa is almost completely diminished.\n            * Porting of OS to newer architecture becomes easier.\n            * More reliable because less code is running in kernel mode.\n            * More secure as less code has to be valudated in kernel.\n        * Disadvantages\n            * Performance overhead to change the mode.\n        * Eg. Mach, MINIX, Windows NT Client-Server\n    * Modules\n    * Hybrid Approach","url":"https://sameep1234.github.io/notes/notes\\YWtnvQOHrej4digmZkK86.html","relUrl":"notes\\YWtnvQOHrej4digmZkK86.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Operating System.Lecture 1","content":"\n# Introduction to Operating System\n\n## Course Material\n* Textbook - Operating Systems: Internals and Design Principles, 9th Edition, by William Stallings, Pearson\n\n## Computing System\n\n> Basic purpose is to perform computation on input data and generate results\n\n* Comprised of hardware, software and data.\n* Secondary storage stores all the programs (like code in C).\n* To execute it, first load it into the memory (RAM).\n* For any program to run by the processor, first fetch, then execute and then finally check for the interrupts.\n\n> Operating System will perform the task of loading the program from secondary memory (Hard Disks) to main memory (RAM)\n\n## Functions of OS\n* I/O Management\n* Process Management\n* Memory Management\n* File Management\n\n> Operating system is a program that acts as an intermediary between a user of a computer and the computer hardware.\n\n## Objectives of OS\n* Convenience - Makes computer easy to use\n* Efficiency - Manages resources efficiently\n* Ability to evolve - Easy to adapt changes\n\n## Users of Computing System\n* End User - Use the application as it is. Eg. Excel Users\n* Programmer - Developing applications. Need to understand utility programs and OS\n* Operating System Designer/System Level Programmer - Creates OS/**Works with computer hardware**/Develop or write a driver\n\n> Driver is a piece of software that understands a hardware. It understands the internals of the attached hardware.\n\n## Services provided by OS\n\n> Through these services OS attains \"Convenience\".\n\n* Program development\n* Program execution\n* Access I/O devices (Eg. CDs, Pendrives)\n* Controlled access to files (Provides protection in multi-access systems (Eg. Multiple users in same laptop))\n* System access\n* Error detection and response (Eg. Errors in reading CDs)\n* Accounting (Collect usage statistics/Monitor performance)\n\n## Resource Management\n* Movement\n* Storage\n* Processing of data\n\n> OS is a program that is executed by the CPU! (Kind of ironic. OS handles CPU but is executed by CPU XD)","url":"https://sameep1234.github.io/notes/notes\\ze7K28mUdIHg5Z137Vucz.html","relUrl":"notes\\ze7K28mUdIHg5Z137Vucz.html"},{"doc":"Music","title":"Music","hpath":"courses.Semester 5.Music","content":"\n","url":"https://sameep1234.github.io/notes/notes\\YfEhInqFt0RCqjRYQvTlf.html","relUrl":"notes\\YfEhInqFt0RCqjRYQvTlf.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Music.Lecture 1","content":"\n","url":"https://sameep1234.github.io/notes/notes\\BpPndOdyo69WT64AEoDns.html","relUrl":"notes\\BpPndOdyo69WT64AEoDns.html"},{"doc":"Material Science and Engineering","title":"Material Science and Engineering","hpath":"courses.Semester 5.Material Science and Engineering","content":"\n","url":"https://sameep1234.github.io/notes/notes\\SkPPj7voTTRpF7d0XMYNV.html","relUrl":"notes\\SkPPj7voTTRpF7d0XMYNV.html"},{"doc":"Lecture 3","title":"Lecture 3","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 3","content":"\n# Crystal Lattice\n\n### Sorry for the inconvinience but please refer this [site](https://unread.parthshah.ml/notes/omAwLOv3wYSYrihgzYlu4.html) for lecture 3 notes.","url":"https://sameep1234.github.io/notes/notes\\hvEDw5kSoIcX03j2YJdL9.html","relUrl":"notes\\hvEDw5kSoIcX03j2YJdL9.html"},{"doc":"Lecture 2","title":"Lecture 2","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 2","content":"\n# Atomic Structure, Bonding and Energy\n\n## Classification of materials\n![](/assets/images/2021-08-28-10-22-07.png)\n\n* Types of materials\n    \n    * Semiconductor\n    * Polymer\n    * Metals\n    * Ceramics\n    * Biomaterials\n    * Composites\n\n> Composite material is formed by the combination of two or more types of materials. But why do we need composite materials?\n\n* Reduce Weight\n* Lowers the cost of the material\n* Gives strength to the device\n* **Mediates propogation of charge/current**\n\n## Atomic structure\n\n* Atomic mass unit = 1/12 of the mass of most common isotope of carbon.\n* Atomic weight is weighted average of atomic masses of naturally occuring isotopes.\n* A mole is amount of matter with mass in grams equal to atomic mass in amu.\n* A mole of carbon has a mass of 12 grams.\n* **One mole has 6.023 x 10^23 number of atoms (also called as Avogadro's number)**\n* Number density formula: \n\n![](/assets/images/2021-08-28-15-14-09.png)\n\nHere Nav = avogadro's number, $\\rho$ = mass density and A = atomic mass\n\n* De broglie wavelength: \n\n![](/assets/images/2021-08-28-15-58-00.png)\n\n* Heisenberg Uncertainty Principle: \n\n![](/assets/images/2021-08-28-15-58-34.png)\n\n### Electronic Structure of isolated atoms\n* n  principal shell (1,2,3... or K,L,M...)\n* l = anular (sub shell) (s,p,d,f)\n* ml = magnetic (-l to +l including 0)\n* ms = spin (1/2, -1/2)\n\n> Ionization potential is the energy required to pull out a valence electron (in vacuum) and by convention it is positive. Electron affinity is energy gained by putting an electron in (from vacuum) and by convention it is negative.\n\n> Electronegativity is the measure of how likely an atom will take up or give up an electron.\n\n* Valence electrons determine the physical properties viz chemical, electrical, thermal and optical\n* Electropositive elements easily give up electrons to become positive ions. These generally rest in the left sife of the periodic table and vice versa for electronegative elements.\n* This means electronegativity is smaller on left side and larger on the right side.\n\n## Physical properties in Periodic table\n![](/assets/images/2021-08-28-16-08-27.png)\n\n## Bonding in solids\n* At large distances, interactions are negligible and at small distances each atom exerts forces on the other.\n* These include, force of attraction and that of repulsion.\n\n![](/assets/images/2021-08-28-16-12-56.png)\n\n* Fnet = Fr + Fa. At equilibrium Fnet = 0\n\n## Potential Energy\n\n> **Here potential energy and energy are used interchangebly.**\n\n* Energy is integration of foice wrt the radius.\n* Enet = Ea + Er.\n\n![](/assets/images/2021-08-28-16-17-07.png)\n\n* Attraction energy = -A/r and Repulsive energy = B/power(r,n)\n* E0 = Bonding energy at minimum distance. This means that it is the energy required to seperate two atoms.\n* It the curve above is deep, this implies that the material is rigid and inflexible and vice versa.\n* If the double derivative of the energy (equivalent to single derivative of force equation) equation at r = r0 is less than 0 then it is stable and vice versa.\n* To find the equalibrium position, make the single derivative of the energy equation (equivalent to the force equation) equal to 0.\n\n## Ionic Bonding\n* **Difference between electronegativity is of prime importance. Ionic bonding only occurs between atoms with large differences in electronegativity.**\n* Cation = Positive Ion, Anion = Negative Ion\n* Primary Bonding means that electrons are completely transferred. Atoms do so to acheive stable configuration. Such type of bonding is very strong (columbic force in case of ionic bonding). (Eg. Ionic, Covalent and Metallic)\n* Ionic bonds are non-directional whereas covalent bonds are directional in nature.\n* Secondary Bonding means that electrons are shared. This type of bonding is weaker compared to primary bonding. (Eg. inert gases (H2, Cl2) or permanet dipoles (H20, HCl))\n* Enet (due to all attractions and repulsions) is known as **madelung energy**.\n\n## Covalent Bonding\n* **Covalent bonding occurs between atoms with small differences in electronegativity.**\n* Percent of ionic characters:\n\n![](/assets/images/2021-08-28-16-46-57.png)\n\n* Here Xa and Xb are the electronegativities of elements a and b. Greater the difference between electronegativities, greater is the ionic bonding and vice versa.\n\n## Summary of Bonding\n\n![](/assets/images/2021-08-28-16-50-27.png)","url":"https://sameep1234.github.io/notes/notes\\3Ez0kXjxHUD43Yc6H2vMR.html","relUrl":"notes\\3Ez0kXjxHUD43Yc6H2vMR.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Material Science and Engineering.Lecture 1","content":"\n# Introduction to Material Science and Engineering\n\n## Points to Ponder\n* With slight change in physical properties, we can get a whole new material. These are **amorphous** and **crystalline**.\n* Difference between LED and solar cell is that one emits the light and other absorbs the light.\n\n## Assessment and Evaluation\n* Mid Sem Exam - 25%\n* End Sem Exam - 30%\n* Lab Work (including viva (15%) and theory exam (10%)) - 25%\n* Project - 10% (Based on ppt presentation and viva)\n* Tests/Quizes - 10% (Two Quiz of 5% each)\n\n## Project Details\n* Submit a report\n* Viva will be conducted\n\n## Course Material\n* Textbook - Materials Science and Engineering: An Introduction, William D Callister 6th Edition, John Wiley & Sons.\n\n> Central Paradign of Material Science and Engineering\n\n![](/assets/images/2021-08-28-10-09-21.png)","url":"https://sameep1234.github.io/notes/notes\\Q0Qv4OOrtgWPGOXojo4iy.html","relUrl":"notes\\Q0Qv4OOrtgWPGOXojo4iy.html"},{"doc":"Identity and Behaviour","title":"Identity and Behaviour","hpath":"courses.Semester 5.Identity and Behaviour","content":"\n","url":"https://sameep1234.github.io/notes/notes\\elcUWYUkVJfjM5NLR8toR.html","relUrl":"notes\\elcUWYUkVJfjM5NLR8toR.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Identity and Behaviour.Lecture 1","content":"\n","url":"https://sameep1234.github.io/notes/notes\\D9wwwfHBU8FZT1kN8UJVO.html","relUrl":"notes\\D9wwwfHBU8FZT1kN8UJVO.html"},{"doc":"Heritage Conservation","title":"Heritage Conservation","hpath":"courses.Semester 5.Heritage Conservation","content":"\n","url":"https://sameep1234.github.io/notes/notes\\znYlAnqQDCB58XxxMMdIl.html","relUrl":"notes\\znYlAnqQDCB58XxxMMdIl.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Heritage Conservation.Lecture 1","content":"\n","url":"https://sameep1234.github.io/notes/notes\\SJH5ZSmDfPD1UrQmDVlHq.html","relUrl":"notes\\SJH5ZSmDfPD1UrQmDVlHq.html"},{"doc":"Embedded Systems","title":"Embedded Systems","hpath":"courses.Semester 5.Embedded Systems","content":"\n","url":"https://sameep1234.github.io/notes/notes\\a1PatlsCiz7PYsL111lFm.html","relUrl":"notes\\a1PatlsCiz7PYsL111lFm.html"},{"doc":"Lecture 1","title":"Lecture 1","hpath":"courses.Semester 5.Embedded Systems.Lecture 1","content":"\n","url":"https://sameep1234.github.io/notes/notes\\wIwPNNBh5jeugRuj1Bhsv.html","relUrl":"notes\\wIwPNNBh5jeugRuj1Bhsv.html"},{"doc":"Changelog","title":"Changelog","hpath":"root.changelog","content":"","url":"https://sameep1234.github.io/notes/notes\\changelog.html","relUrl":"notes\\changelog.html"}]
